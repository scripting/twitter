<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Mon, 08 Mar 2021 20:36:17 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: davetwitter</title>
		<dateCreated>Sat, 07 Oct 2017 14:46:41 GMT</dateCreated>
		<dateModified>Mon, 08 Mar 2021 20:36:17 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 16, 47, 48, 55, 64, 65, 78, 87, 95, 96, 105</expansionState>
		<vertScrollState>32</vertScrollState>
		<windowTop>45</windowTop>
		<windowLeft>841</windowLeft>
		<windowBottom>1166</windowBottom>
		<windowRight>2098</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/davetwitter/">
			<outline text="package.json">
				<outline text="{ ">
					<outline text="&quot;name&quot;: &quot;davetwitter&quot;, "/>
					<outline text="&quot;description&quot;: &quot;Basic twitter functionality for server apps.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.5.24&quot;,"/>
					<outline text="&quot;main&quot;: &quot;davetwitter.js&quot;,"/>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;davetwitter.js&quot;"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;scripts&quot;: {">
						<outline text="&quot;start&quot;: &quot;node main.js&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot; : &quot;git&quot;,"/>
						<outline text="&quot;url&quot; : &quot;https://github.com/scripting/twitter.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;node-twitter-api&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;"/>
						<outline text="}, "/>
						</outline>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;engines&quot;: { ">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="davetwitter.js">
				<outline text="var myVersion = &quot;0.5.24&quot;, myProductName = &quot;davetwitter&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text=""/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const twitterAPI = require (&quot;node-twitter-api&quot;);" created="Mon, 21 Apr 2014 13:38:52 GMT" pgfnum="40297"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text=""/>
				<outline text="Notes" isComment="true">
					<outline text="1/24/21; 12:19:44 PM by DW">
						<outline text="Added support for config.http404Callback."/>
						</outline>
					<outline text="11/10/18; 11:53:18 AM by DW">
						<outline text="New endpoint: getembedcode."/>
						</outline>
					<outline text="1/2/18; 11:16:23 AM by DW">
						<outline text="New entrypoint: getUserInfo"/>
						<outline text="fixed up logging, we should be using davehttp's logging, not ours (which is primitive, not really logging).">
							<outline text="new elements in config -- flLogToConsole, flAllowAccessFromAnywhere"/>
							</outline>
						</outline>
					</outline>
				<outline text="" isComment="true"/>
				<outline text="exports.start = start; "/>
				<outline text="exports.getScreenName = getScreenName;"/>
				<outline text="exports.getUserInfo = getUserInfo; //1/2/18 by DW"/>
				<outline text="exports.sendTweet = sendTweet; //12/17/18 by DW"/>
				<outline text="exports.getTimeline = getTimeline; //3/8/21 by DW" created="Mon, 08 Mar 2021 20:30:32 GMT"/>
				<outline text="exports.getTweet = getTweet; //3/8/21 by DW" created="Mon, 08 Mar 2021 20:30:32 GMT"/>
				<outline text=""/>
				<outline text="var config = {">
					<outline text="httpPort: 1401,"/>
					<outline text="myDomain: &quot;localhost&quot;,"/>
					<outline text="twitterConsumerKey: undefined,"/>
					<outline text="twitterConsumerSecret: undefined,"/>
					<outline text="flForceTwitterLogin: false,"/>
					<outline text="flLogToConsole: false, //1/2/18 by DW"/>
					<outline text="flAllowAccessFromAnywhere: true, //1/2/18 by DW"/>
					<outline text="flPostEnabled: false, //1/3/18 by DW"/>
					<outline text="httpRequestCallback: function (theRequest) {">
						<outline text="return (false); //not consumed"/>
						<outline text="},"/>
						</outline>
					<outline text="http404Callback: function (theRequest) { //1/24/21 by DW">
						<outline text="return (false); //not consumed"/>
						<outline text="},"/>
						</outline>
					<outline text="blockedAddresses: new Array () //4/17/18 by DW"/>
					<outline text="};"/>
					</outline>
				<outline text="var requestTokens = []; //used in the OAuth dance" created="Mon, 21 Apr 2014 14:41:52 GMT" pgfnum="40331"/>
				<outline text="var screenNameCache = []; " created="Wed, 09 Jul 2014 23:26:56 GMT" pgfnum="42738"/>
				<outline text=""/>
				<outline text="function newTwitter (myCallback) {" created="Mon, 21 Apr 2014 23:20:54 GMT" pgfnum="40415">
					<outline text="var twitter = new twitterAPI ({">
						<outline text="consumerKey: config.twitterConsumerKey,"/>
						<outline text="consumerSecret: config.twitterConsumerSecret,"/>
						<outline text="callback: myCallback" created="Mon, 21 Apr 2014 16:29:45 GMT" pgfnum="40363"/>
						<outline text="});"/>
						</outline>
					<outline text="return (twitter);" created="Mon, 21 Apr 2014 23:21:39 GMT" pgfnum="40417"/>
					<outline text="}" created="Mon, 21 Apr 2014 23:21:01 GMT" pgfnum="40416"/>
					</outline>
				<outline text="function getScreenName (accessToken, accessTokenSecret, callback) {" created="Wed, 09 Jul 2014 23:27:42 GMT" pgfnum="42742">
					<outline text="for (var i = 0; i &lt; screenNameCache.length; i++) { //see if we can get it from the cache first" created="Wed, 09 Jul 2014 23:28:55 GMT" pgfnum="42746">
						<outline text="var obj = screenNameCache [i];" created="Wed, 09 Jul 2014 23:29:55 GMT" pgfnum="42752"/>
						<outline text="if ((obj.accessToken == accessToken) &amp;&amp; (obj.accessTokenSecret == accessTokenSecret)) {" created="Wed, 09 Jul 2014 23:30:08 GMT" pgfnum="42753">
							<outline text="obj.ctAccesses++;" created="Wed, 09 Jul 2014 23:36:41 GMT" pgfnum="42760"/>
							<outline text="callback (obj.screenName);" created="Wed, 09 Jul 2014 23:30:51 GMT" pgfnum="42755"/>
							<outline text="return;" created="Wed, 09 Jul 2014 23:36:20 GMT" pgfnum="42759"/>
							<outline text="}" created="Wed, 09 Jul 2014 23:30:25 GMT" pgfnum="42754"/>
							</outline>
						<outline text="}" created="Wed, 09 Jul 2014 23:29:10 GMT" pgfnum="42751"/>
						</outline>
					<outline text="newTwitter ().verifyCredentials (accessToken, accessTokenSecret, function (error, data, response) {" created="Fri, 02 May 2014 16:45:32 GMT" pgfnum="40867">
						<outline text="if (error) {" created="Fri, 02 May 2014 16:47:09 GMT" pgfnum="40872">
							<outline text="callback (undefined);    "/>
							<outline text="}" created="Fri, 02 May 2014 16:47:16 GMT" pgfnum="40873"/>
							</outline>
						<outline text="else {" created="Fri, 02 May 2014 16:47:17 GMT" pgfnum="40874">
							<outline text="screenNameCache [screenNameCache.length] = {">
								<outline text="accessToken:  accessToken," created="Wed, 09 Jul 2014 23:38:53 GMT" pgfnum="42772"/>
								<outline text="accessTokenSecret:  accessTokenSecret," created="Wed, 09 Jul 2014 23:38:53 GMT" pgfnum="42772"/>
								<outline text="screenName:  data.screen_name, " created="Wed, 09 Jul 2014 23:39:18 GMT" pgfnum="42774"/>
								<outline text="ctAccesses:  0" created="Wed, 09 Jul 2014 23:39:43 GMT" pgfnum="42775"/>
								<outline text="};"/>
								</outline>
							<outline text="callback (data.screen_name);" created="Wed, 09 Jul 2014 23:30:51 GMT" pgfnum="42755"/>
							<outline text="}" created="Fri, 02 May 2014 16:47:19 GMT" pgfnum="40875"/>
							</outline>
						<outline text="});" created="Fri, 02 May 2014 16:47:01 GMT" pgfnum="40871"/>
						</outline>
					<outline text="}" created="Wed, 09 Jul 2014 23:28:19 GMT" pgfnum="42744"/>
					<outline text="" created="Wed, 09 Jul 2014 23:27:48 GMT" pgfnum="42743"/>
					</outline>
				<outline text="function deleteInScreenNameCache (accessToken, accessTokenSecret, callback) { //3/24/19 by DW">
					<outline text="for (var i = 0; i &lt; screenNameCache.length; i++) {" created="Wed, 09 Jul 2014 23:28:55 GMT" pgfnum="42746">
						<outline text="var obj = screenNameCache [i];" created="Wed, 09 Jul 2014 23:29:55 GMT" pgfnum="42752"/>
						<outline text="if ((obj.accessToken == accessToken) &amp;&amp; (obj.accessTokenSecret == accessTokenSecret)) {" created="Wed, 09 Jul 2014 23:30:08 GMT" pgfnum="42753">
							<outline text="callback (obj);"/>
							<outline text="screenNameCache.splice (i, 1);"/>
							<outline text="return;" created="Wed, 09 Jul 2014 23:36:20 GMT" pgfnum="42759"/>
							<outline text="}" created="Wed, 09 Jul 2014 23:30:25 GMT" pgfnum="42754"/>
							</outline>
						<outline text="}" created="Wed, 09 Jul 2014 23:29:10 GMT" pgfnum="42751"/>
						</outline>
					<outline text="callback ({">
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getUserInfo (accessToken, accessTokenSecret, screenName, callback) { //1/2/18 by DW">
					<outline text="var params = {screen_name: screenName};" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422"/>
					<outline text="newTwitter ().users (&quot;show&quot;, params, accessToken, accessTokenSecret, function (error, data, response) {">
						<outline text="if (error) {" created="Mon, 21 Apr 2014 23:12:55 GMT" pgfnum="40408">
							<outline text="callback (error);"/>
							<outline text="}" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40409"/>
							</outline>
						<outline text="else {" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40410">
							<outline text="callback (undefined, data);" created="Sat, 21 Jun 2014 14:43:33 GMT" pgfnum="42366"/>
							<outline text="}" created="Mon, 21 Apr 2014 23:13:00 GMT" pgfnum="40411"/>
							</outline>
						<outline text="});" created="Mon, 21 Apr 2014 23:12:34 GMT" pgfnum="40407"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function saveRequestToken (requestToken, requestTokenSecret) {" created="Mon, 21 Apr 2014 16:42:08 GMT" pgfnum="40364">
					<outline text="var obj = new Object ();" created="Mon, 21 Apr 2014 16:42:32 GMT" pgfnum="40366"/>
					<outline text="obj.rt = requestToken;" created="Mon, 21 Apr 2014 16:42:39 GMT" pgfnum="40367"/>
					<outline text="obj.secret = requestTokenSecret;" created="Mon, 21 Apr 2014 16:42:44 GMT" pgfnum="40368"/>
					<outline text="requestTokens [requestTokens.length] = obj;" created="Mon, 25 Feb 2013 03:09:00 GMT" pgfnum="19069"/>
					<outline text="}" created="Mon, 21 Apr 2014 16:42:29 GMT" pgfnum="40365"/>
					</outline>
				<outline text="function findRequestToken (theRequestToken) {" created="Sat, 23 Nov 2013 16:35:47 GMT" pgfnum="32071">
					<outline text="for (var i = 0; i &lt; requestTokens.length; i++) {" created="Sat, 23 Nov 2013 16:36:28 GMT" pgfnum="32073">
						<outline text="if (requestTokens [i].rt == theRequestToken) {" created="Sat, 23 Nov 2013 16:36:39 GMT" pgfnum="32075">
							<outline text="var secret = requestTokens [i].secret;" created="Sat, 23 Nov 2013 16:37:11 GMT" pgfnum="32077"/>
							<outline text="requestTokens.splice (i, 1);" created="Mon, 21 Apr 2014 17:00:42 GMT" pgfnum="40379"/>
							<outline text="return (secret);" created="Mon, 21 Apr 2014 17:00:36 GMT" pgfnum="40377"/>
							<outline text="}" created="Sat, 23 Nov 2013 16:37:02 GMT" pgfnum="32076"/>
							</outline>
						<outline text="}" created="Sat, 23 Nov 2013 16:36:30 GMT" pgfnum="32074"/>
						</outline>
					<outline text="return (undefined);" created="Sat, 23 Nov 2013 16:37:19 GMT" pgfnum="32078"/>
					<outline text="}" created="Sat, 23 Nov 2013 16:36:01 GMT" pgfnum="32072"/>
					</outline>
				<outline text="function sendTweet (accessToken, accessTokenSecret, status, inReplyToId, callback) {">
					<outline text="var params = {status: status, in_reply_to_status_id: inReplyToId};" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422"/>
					<outline text="newTwitter ().statuses (&quot;update&quot;, params, accessToken, accessTokenSecret, callback);"/>
					<outline text="if (config.rssFeed.enabled) {" isComment="true">
						<outline text="getScreenName (accessToken, accessTokenSecret, function (screenName) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
							<outline text="addTweetToFeed (screenName, status);"/>
							<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="function getTimeline (accessToken, accessTokenSecret, whichTimeline, userId, sinceId, callback) { //2/11/21 by DW">
					<outline text="var twitter = newTwitter ();" created="Mon, 21 Apr 2014 23:21:52 GMT" pgfnum="40418"/>
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="user_id: userId, " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="trim_user: &quot;false&quot;," created="Tue, 16 Feb 2021 16:31:50 GMT"/>
						<outline text="tweet_mode: &quot;extended&quot;"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="if (sinceId !== undefined) {" created="Tue, 22 Apr 2014 02:02:36 GMT" pgfnum="40424">
						<outline text="params.since_id = sinceId;" created="Tue, 22 Apr 2014 02:02:49 GMT" pgfnum="40428"/>
						<outline text="}" created="Tue, 22 Apr 2014 02:02:45 GMT" pgfnum="40427"/>
						</outline>
					<outline text="newTwitter ().getTimeline (whichTimeline, params, accessToken, accessTokenSecret, callback);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getTweet (id, callback) { //3/8/21 by DW">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="id, " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="tweet_mode: &quot;extended&quot;"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="newTwitter ().statuses (&quot;show&quot;, params, undefined, undefined, callback);"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="function handleRequest (theRequest) {">
					<outline text="var params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="function errorResponse (errorval) {" isComment="true">
						<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, errorval);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="console.log (&quot;returnData: jstruct == &quot; + utils.jsonStringify (jstruct));" isComment="true"/>
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="console.log (&quot;returnError: jstruct == &quot; + utils.jsonStringify (jstruct));"/>
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="console.log (&quot;davetwitter: theRequest.lowerpath == &quot; + theRequest.lowerpath);" isComment="true"/>
					<outline text="if (!config.httpRequestCallback (theRequest)) { //it wasn't handled by the higher level code">
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/now&quot;: " isComment="true" created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
								<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ());"/>
								<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
								</outline>
							<outline text="case &quot;/connect&quot;: " created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
								<outline text="var urlCallback = &quot;http://&quot; + config.myDomain + &quot;/callbackFromTwitter?redirectUrl=&quot; + encodeURIComponent (theRequest.params.redirect_url);"/>
								<outline text="var twitter = new twitterAPI ({">
									<outline text="consumerKey: config.twitterConsumerKey,"/>
									<outline text="consumerSecret: config.twitterConsumerSecret,"/>
									<outline text="callback: urlCallback"/>
									<outline text="});"/>
									</outline>
								<outline text="console.log (&quot;davetwitter/handleRequest: urlCallback == &quot; + urlCallback); //4/19/19 by DW"/>
								<outline text="twitter.getRequestToken (function (error, requestToken, requestTokenSecret, results) {">
									<outline text="if (error) {">
										<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, error.data);"/>
										<outline text="}" created="Mon, 21 Apr 2014 13:53:42 GMT" pgfnum="40310"/>
										</outline>
									<outline text="else {">
										<outline text="saveRequestToken (requestToken, requestTokenSecret);" created="Mon, 21 Apr 2014 16:43:56 GMT" pgfnum="40371"/>
										<outline text="" created="Mon, 21 Apr 2014 16:16:45 GMT" pgfnum="40357"/>
										<outline text="var twitterOauthUrl = &quot;https://twitter.com/oauth/authenticate?oauth_token=&quot; + requestToken;" created="Mon, 21 Apr 2014 14:18:10 GMT" pgfnum="40322"/>
										<outline text="if (config.flForceTwitterLogin) { //2/19/16 by DW">
											<outline text="twitterOauthUrl += &quot;&amp;force_login=true&quot;; //https://dev.twitter.com/oauth/reference/get/oauth/authenticate"/>
											<outline text="}"/>
											</outline>
										<outline text="theRequest.sysResponse.writeHead (302, {&quot;location&quot;: twitterOauthUrl});"/>
										<outline text="theRequest.sysResponse.end (&quot;302 REDIRECT&quot;);    "/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
								</outline>
							<outline text="case &quot;/disconnect&quot;: //3/24/19 by DW">
								<outline text="var token = theRequest.params.oauth_token;" isComment="true" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="var tokenSecret = theRequest.params.oauth_token_secret;" isComment="true" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="deleteInScreenNameCache (token, secret, function (data) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
									<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (data));"/>
									<outline text="});"/>
									</outline>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/callbackfromtwitter&quot;:" created="Mon, 21 Apr 2014 14:25:08 GMT" pgfnum="40323">
								<outline text="we're being called back from twitter -- like this: " isComment="true" created="Mon, 21 Apr 2014 15:14:29 GMT" pgfnum="40348">
									<outline text="http://fargotwitter.herokuapp.com/callbackFromTwitter?oauth_token=ohZDtFHu8T2siB59GbPCwhJTbS1sCOjv2EBvZJVvk&amp;oauth_verifier=Ne8EUrsuIPMfbta5PnaAvIv61sgoawlODlO8Uzob1kY" isComment="true" created="Mon, 21 Apr 2014 14:25:54 GMT" pgfnum="40325"/>
									<outline text="http://fargotwitter.herokuapp.com/callbackFromTwitter?redirectUrl=portnoy&amp;oauth_token=LyndS2n9zMCIxwMszwWapgJSm6N9bl6tT1CXJ9UlsE&amp;oauth_verifier=2QWyUZoHO0Bw0ck0DHzSYEFZmgbbrLSoVDjbwtZ5yg"/>
									</outline>
								<outline text="" created="Mon, 21 Apr 2014 16:29:14 GMT" pgfnum="40358"/>
								<outline text="var twitter = new twitterAPI ({">
									<outline text="consumerKey: config.twitterConsumerKey,"/>
									<outline text="consumerSecret: config.twitterConsumerSecret,"/>
									<outline text="callback: undefined" created="Mon, 21 Apr 2014 16:29:45 GMT" pgfnum="40363"/>
									<outline text="});"/>
									</outline>
								<outline text="" created="Mon, 21 Apr 2014 16:46:02 GMT" pgfnum="40372"/>
								<outline text="var myRequestToken = theRequest.params.oauth_token;" created="Mon, 21 Apr 2014 16:46:03 GMT" pgfnum="40373"/>
								<outline text="var myTokenSecret = findRequestToken (myRequestToken);" created="Mon, 21 Apr 2014 16:46:14 GMT" pgfnum="40374"/>
								<outline text="" created="Mon, 21 Apr 2014 16:55:13 GMT" pgfnum="40376"/>
								<outline text="console.log (&quot;myRequestToken == &quot; + myRequestToken + &quot;, myTokenSecret == &quot; + myTokenSecret + &quot;.&quot;);" isComment="true" created="Mon, 21 Apr 2014 13:55:41 GMT" pgfnum="40316"/>
								<outline text="" created="Mon, 21 Apr 2014 16:29:15 GMT" pgfnum="40362"/>
								<outline text="twitter.getAccessToken (myRequestToken, myTokenSecret, theRequest.params.oauth_verifier, function (error, accessToken, accessTokenSecret, results) {">
									<outline text="if (error) {">
										<outline text="console.log (&quot;twitter.getAccessToken: error == &quot; + error.message);"/>
										<outline text="}" created="Mon, 21 Apr 2014 15:12:29 GMT" pgfnum="40347"/>
										</outline>
									<outline text="else {" created="Mon, 21 Apr 2014 15:12:16 GMT" pgfnum="40346">
										<outline text="var url = theRequest.params.redirectUrl + &quot;?oauth_token=&quot; + encodeURIComponent (accessToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (accessTokenSecret) + &quot;&amp;user_id=&quot; + encodeURIComponent (results.user_id) + &quot;&amp;screen_name=&quot; + encodeURIComponent (results.screen_name);" created="Mon, 21 Apr 2014 20:11:35 GMT" pgfnum="40386"/>
										<outline text="" created="Mon, 21 Apr 2014 20:13:19 GMT" pgfnum="40387"/>
										<outline text="theRequest.sysResponse.writeHead (302, {&quot;location&quot;: url});"/>
										<outline text="theRequest.sysResponse.end (&quot;302 REDIRECT&quot;);    "/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
								</outline>
							<outline text="case &quot;/getmyscreenname&quot;:">
								<outline text="getScreenName (token, secret, function (screenName) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
									<outline text="var obj = {">
										<outline text="screenName: screenName"/>
										<outline text="};"/>
										</outline>
									<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (obj));"/>
									<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
									</outline>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/getuserinfo&quot;: //11/19/17 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
								<outline text="var screenName = theRequest.params.screen_name;" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="var params = {screen_name: screenName};" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422"/>
								<outline text="var twitter = newTwitter ();" created="Mon, 21 Apr 2014 23:21:52 GMT" pgfnum="40418"/>
								<outline text="twitter.users (&quot;show&quot;, params, token, secret, function (error, data, response) {">
									<outline text="if (error) {" created="Mon, 21 Apr 2014 23:12:55 GMT" pgfnum="40408">
										<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, error.data);"/>
										<outline text="}" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40409"/>
										</outline>
									<outline text="else {" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40410">
										<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (data));"/>
										<outline text="}" created="Mon, 21 Apr 2014 23:13:00 GMT" pgfnum="40411"/>
										</outline>
									<outline text="});" created="Mon, 21 Apr 2014 23:12:34 GMT" pgfnum="40407"/>
									</outline>
								<outline text="return;" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
								</outline>
							<outline text="case &quot;/derefurl&quot;: //11/19/17 by DW" created="Thu, 31 Jul 2014 16:34:56 GMT" pgfnum="43058">
								<outline text="var shortUrl = theRequest.params.url;" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="getScreenName (token, secret, function (screenName) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
									<outline text="if (screenName === undefined) {" created="Thu, 10 Jul 2014 00:53:00 GMT" pgfnum="42793">
										<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, &quot;Can't get the deref the URL because the accessToken is not valid.&quot;);"/>
										<outline text="}" created="Thu, 10 Jul 2014 00:53:11 GMT" pgfnum="42797"/>
										</outline>
									<outline text="else {" created="Thu, 10 Jul 2014 00:53:12 GMT" pgfnum="42798">
										<outline text="var myRequest = {" created="Thu, 31 Jul 2014 16:39:00 GMT" pgfnum="43066">
											<outline text="method: &quot;HEAD&quot;, " created="Thu, 31 Jul 2014 16:39:06 GMT" pgfnum="43067"/>
											<outline text="url: shortUrl, " created="Thu, 31 Jul 2014 16:39:22 GMT" pgfnum="43070"/>
											<outline text="followAllRedirects: true" created="Thu, 31 Jul 2014 16:39:18 GMT" pgfnum="43069"/>
											<outline text="};" created="Thu, 31 Jul 2014 16:39:13 GMT" pgfnum="43068"/>
											</outline>
										<outline text="request (myRequest, function (error, response) {">
											<outline text="if (error) {" created="Thu, 31 Jul 2014 16:39:35 GMT" pgfnum="43071">
												<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, &quot;Can't get the deref the URL because there was an error making the HTTP request.&quot;);"/>
												<outline text="}" created="Thu, 31 Jul 2014 16:39:38 GMT" pgfnum="43072"/>
												</outline>
											<outline text="else {" created="Thu, 31 Jul 2014 16:39:39 GMT" pgfnum="43073">
												<outline text="var myResponse = {" created="Thu, 31 Jul 2014 16:40:49 GMT" pgfnum="43075">
													<outline text="url: shortUrl," created="Thu, 31 Jul 2014 16:41:19 GMT" pgfnum="43078"/>
													<outline text="longurl: response.request.href" created="Thu, 31 Jul 2014 16:41:06 GMT" pgfnum="43077"/>
													<outline text="};" created="Thu, 31 Jul 2014 16:40:55 GMT" pgfnum="43076"/>
													</outline>
												<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (myResponse));"/>
												<outline text="}" created="Thu, 31 Jul 2014 16:39:41 GMT" pgfnum="43074"/>
												</outline>
											<outline text="});"/>
											</outline>
										<outline text="}" created="Thu, 10 Jul 2014 00:53:14 GMT" pgfnum="42799"/>
										</outline>
									<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
									</outline>
								<outline text="return;" created="Thu, 31 Jul 2014 17:01:59 GMT" pgfnum="43084"/>
								</outline>
							<outline text="case &quot;/getembedcode&quot;: //11/10/18 by DW" created="Fri, 20 Jun 2014 17:54:12 GMT" pgfnum="42277">
								<outline text="//https://dev.twitter.com/docs/api/1/get/statuses/oembed" created="Fri, 20 Jun 2014 23:08:14 GMT" pgfnum="42337"/>
								<outline text="" created="Fri, 20 Jun 2014 23:08:17 GMT" pgfnum="42338"/>
								<outline text="var url = &quot;https://api.twitter.com/1/statuses/oembed.json?id=&quot; + theRequest.params.id;" created="Fri, 20 Jun 2014 18:09:00 GMT" pgfnum="42291"/>
								<outline text="" created="Fri, 20 Jun 2014 23:01:58 GMT" pgfnum="42325"/>
								<outline text="function addParam (name) {" created="Fri, 20 Jun 2014 23:01:58 GMT" pgfnum="42326">
									<outline text="if (theRequest.params [name] !== undefined) {" created="Fri, 20 Jun 2014 23:02:46 GMT" pgfnum="42333">
										<outline text="url += &quot;&amp;&quot; + name + &quot;=&quot; + theRequest.params [name];" created="Fri, 20 Jun 2014 23:03:08 GMT" pgfnum="42336"/>
										<outline text="}" created="Fri, 20 Jun 2014 23:02:57 GMT" pgfnum="42335"/>
										</outline>
									<outline text="}" created="Fri, 20 Jun 2014 23:02:34 GMT" pgfnum="42330"/>
									</outline>
								<outline text="addParam (&quot;maxwidth&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;hide_media&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;hide_thread&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;omit_script&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;align&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;related&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;lang&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="" created="Fri, 20 Jun 2014 23:01:59 GMT" pgfnum="42329"/>
								<outline text="request (url, function (error, response, body) {">
									<outline text="if (!error &amp;&amp; (response.statusCode == 200)) {">
										<outline text="httpResponse.writeHead (200, {&quot;Content-Type&quot;: &quot;text/plain&quot;, &quot;Access-Control-Allow-Origin&quot;: &quot;*&quot;});" isComment="true"/>
										<outline text="httpResponse.end (body);    " isComment="true"/>
										<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, body);"/>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Fri, 20 Jun 2014 18:10:50 GMT" pgfnum="42293">
										<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, utils.jsonStringify (error));"/>
										<outline text="}" created="Fri, 20 Jun 2014 18:10:52 GMT" pgfnum="42294"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="return;" created="Fri, 20 Jun 2014 17:54:25 GMT" pgfnum="42278"/>
								</outline>
							<outline text="case &quot;/tweet&quot;: //12/14/18 by DW" created="Tue, 22 Apr 2014 02:26:28 GMT" pgfnum="40441">
								<outline text="sendTweet (params.oauth_token, params.oauth_token_secret, params.status, params.in_reply_to_status_id, httpReturn);"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/configuration&quot;: //8/15/19 by DW" created="Tue, 06 May 2014 19:51:53 GMT" pgfnum="41199">
								<outline text="console.log (&quot;davetwitter: getting configuration.&quot;);" isComment="true"/>
								<outline text="var twitter = newTwitter ();" created="Mon, 21 Apr 2014 23:21:52 GMT" pgfnum="40418"/>
								<outline text="var params = {};" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422"/>
								<outline text="var accessToken = theRequest.params.oauth_token;" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="var accessTokenSecret = theRequest.params.oauth_token_secret;" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="twitter.help (&quot;configuration&quot;, params, accessToken, accessTokenSecret, function (err, data, response) {" created="Tue, 06 May 2014 19:53:05 GMT" pgfnum="41204">
									<outline text="if (err) {" created="Mon, 21 Apr 2014 23:12:55 GMT" pgfnum="40408">
										<outline text="returnError (err);"/>
										<outline text="}" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40409"/>
										</outline>
									<outline text="else {" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40410">
										<outline text="returnData (data);"/>
										<outline text="}" created="Mon, 21 Apr 2014 23:13:00 GMT" pgfnum="40411"/>
										</outline>
									<outline text="});" created="Mon, 21 Apr 2014 23:12:34 GMT" pgfnum="40407"/>
									</outline>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getmymentions&quot;: //2/11/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getTimeline (token, secret, &quot;mentions&quot;, params.user_id, params.since_id, httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/gettimeline&quot;: //2/14/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getTimeline (token, secret, params.whichtimeline, params.user_id, params.since_id, httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/gettweet&quot;: //3/8/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getTweet (params.id, httpReturn)"/>
								<outline text="getTweet (token, secret, params.id, httpReturn)" isComment="true"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="if (!config.http404Callback (theRequest)) { //1/24/21 by DW">
							<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function start (configParam, callback) {">
					<outline text="if (configParam !== undefined) {">
						<outline text="for (x in configParam) {">
							<outline text="config [x] = configParam [x];"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="console.log (&quot;davetwitter.start: config == &quot; + utils.jsonStringify (config));"/>
					<outline text=""/>
					<outline text="var httpConfig = {">
						<outline text="port: config.httpPort,"/>
						<outline text="flLogToConsole: config.flLogToConsole,"/>
						<outline text="flAllowAccessFromAnywhere: config.flAllowAccessFromAnywhere,"/>
						<outline text="flPostEnabled: config.flPostEnabled,"/>
						<outline text="blockedAddresses: config.blockedAddresses //4/17/18 by DW"/>
						<outline text="};"/>
						</outline>
					<outline text="davehttp.start (httpConfig, function (theRequest) {">
						<outline text="handleRequest (theRequest);"/>
						<outline text="});"/>
						</outline>
					<outline text=""/>
					<outline text="if (callback !== undefined) { //12/31/17 by DW">
						<outline text="callback ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="readme.md">
				<outline text="# davetwitter">
					<outline text="A simple identity server that can be dropped into other server apps. "/>
					</outline>
				<outline text="### Changes">
					<outline text="#### v0.5.21 -- 2/12/21 by DW" created="Fri, 12 Feb 2021 17:37:00 GMT">
						<outline text="Sorry for the missing notes." created="Fri, 12 Feb 2021 17:37:16 GMT"/>
						<outline text="Added /getmymentions call." created="Fri, 12 Feb 2021 17:37:20 GMT"/>
						</outline>
					<outline text="#### v0.5.10 -- 3/24/19 by DW">
						<outline text="There's a new HTTP call -- /disconnect. You should call it when the user signs off. It takes two params, the accessToken and accessTokenSecret for the user. It goes through the screenNameCache looking for the user, and deletes it if it's found. I've updated &lt;a href=&quot;http://feedbase.io/&quot;&gt;feedBase&lt;/a&gt; to make this call when the user signs off. "/>
						<outline text="This problem was &lt;a href=&quot;https://github.com/scripting/feedBase/issues/40&quot;&gt;reported&lt;/a&gt; by @vincode-io. Many thanks for the excellent report and follow-up."/>
						</outline>
					</outline>
				</outline>
			<outline text=""/>
			<outline text="test1/main.js">
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const davetwitter = require (&quot;davetwitter&quot;);" isComment="true"/>
				<outline text="const davetwitter = require (&quot;../davetwitter.js&quot;);"/>
				<outline text=""/>
				<outline text="var config = {">
					<outline text="twitterConsumerKey: &quot;xxx&quot;,"/>
					<outline text="twitterConsumerSecret: &quot;yyy&quot;"/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="davetwitter.start (config, function () {">
					<outline text="});"/>
					</outline>
				<outline text=""/>
				</outline>
			<outline text="test1/package.json">
				<outline text="{ ">
					<outline text="&quot;name&quot;: &quot;test&quot;, "/>
					<outline text="&quot;description&quot;: &quot;test.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@smallpicture.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;davetwitter&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;"/>
						<outline text="}, "/>
						</outline>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;engines&quot;: { ">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="test1/code.js">
				<outline text="function twGetDefaultServer () {">
					<outline text="var urlServer = &quot;http://localhost:1401/&quot;;" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="return (urlServer);"/>
					<outline text="}"/>
					</outline>
				<outline text="function twConnectToTwitter () {" created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25623">
					<outline text="var urlServer = twGetDefaultServer ();" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="function trimTrailing (s, ch) {" created="Mon, 11 Mar 2013 02:40:24 GMT" pgfnum="20129">
						<outline text="while (s.charAt (s.length - 1) == ch) {">
							<outline text="s = s.substr (0, s.length - 1);"/>
							<outline text="}" created="Thu, 24 Apr 2014 00:51:29 GMT" pgfnum="40514"/>
							</outline>
						<outline text="return (s);" created="Mon, 11 Mar 2013 02:43:18 GMT" pgfnum="20133"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:51:23 GMT" pgfnum="40513"/>
						</outline>
					<outline text="var s = trimTrailing (window.location.href, &quot;#&quot;);" created="Thu, 13 Jun 2013 23:16:23 GMT" pgfnum="26128"/>
					<outline text="var urlRedirectTo = urlServer + &quot;connect?redirect_url=&quot; + encodeURIComponent (s);" created="Mon, 28 Apr 2014 12:43:45 GMT" pgfnum="40579"/>
					<outline text="window.location.href = urlRedirectTo;" created="Mon, 28 Apr 2014 12:43:28 GMT" pgfnum="40575"/>
					<outline text="}" created="Mon, 10 Jun 2013 18:19:49 GMT" pgfnum="25632"/>
					</outline>
				<outline text="function twGetOauthParams (flRedirectIfParamsPresent) {" created="Tue, 16 Apr 2013 22:17:00 GMT" pgfnum="22778">
					<outline text="Changes" isComment="true" created="Thu, 24 Apr 2014 01:03:08 GMT" pgfnum="40520">
						<outline text="7/19/17; 6:40:17 PM by DW">
							<outline text="Use window.location.replace to redirecdt, per this Stack Overflow post.">
								<outline text="https://stackoverflow.com/a/506004/459452"/>
								</outline>
							</outline>
						<outline text="6/4/14; 8:08:46 AM by DW" created="Wed, 04 Jun 2014 12:08:46 GMT" pgfnum="41773">
							<outline text="Return flTwitterParamsPresent to the caller." created="Wed, 04 Jun 2014 12:08:47 GMT" pgfnum="41774"/>
							</outline>
						<outline text="6/4/14; 8:06:01 AM by DW" created="Wed, 04 Jun 2014 12:06:01 GMT" pgfnum="41771">
							<outline text="New optional param, flRedirectIfParamsPresent. If false, we don't redirect if params are present. This is needed in the stub that handles Twitter OAuth for Fargo. It just wants to quit after doing its job." created="Wed, 04 Jun 2014 12:06:02 GMT" pgfnum="41772"/>
							</outline>
						<outline text="4/23/14; 9:03:10 PM by DW" created="Thu, 24 Apr 2014 01:03:09 GMT" pgfnum="40521">
							<outline text="Get OAuth values for the user from the url params, copy into local storage. " created="Thu, 24 Apr 2014 01:03:11 GMT" pgfnum="40522"/>
							</outline>
						</outline>
					<outline text="var flTwitterParamsPresent = false;" created="Tue, 11 Jun 2013 23:25:57 GMT" pgfnum="25797"/>
					<outline text="if (flRedirectIfParamsPresent === undefined) { //6/4/14 by DW" created="Wed, 04 Jun 2014 12:05:32 GMT" pgfnum="41766">
						<outline text="flRedirectIfParamsPresent = true;" created="Wed, 04 Jun 2014 12:05:41 GMT" pgfnum="41769"/>
						<outline text="}" created="Wed, 04 Jun 2014 12:05:46 GMT" pgfnum="41770"/>
						</outline>
					<outline text="function getURLParameter (name) {">
						<outline text="return (decodeURI ((RegExp(name + '=' + '(.+?)(&amp;|$)').exec(location.search)||[,null])[1]));"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:54:02 GMT" pgfnum="40519"/>
						</outline>
					<outline text="function getParam (paramname, objname) {" created="Thu, 24 Apr 2014 01:03:43 GMT" pgfnum="40523">
						<outline text="var val = getURLParameter (paramname);" created="Thu, 24 Apr 2014 01:04:57 GMT" pgfnum="40531"/>
						<outline text="if (val != &quot;null&quot;) {" created="Thu, 24 Apr 2014 01:05:05 GMT" pgfnum="40532">
							<outline text="localStorage [objname] = val;" created="Thu, 24 Apr 2014 01:04:09 GMT" pgfnum="40529"/>
							<outline text="flTwitterParamsPresent = true;" created="Tue, 29 Apr 2014 16:14:54 GMT" pgfnum="40646"/>
							<outline text="}" created="Thu, 24 Apr 2014 01:05:12 GMT" pgfnum="40533"/>
							</outline>
						<outline text="}" created="Thu, 24 Apr 2014 01:03:55 GMT" pgfnum="40527"/>
						</outline>
					<outline text="getParam (&quot;oauth_token&quot;, &quot;twOauthToken&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;oauth_token_secret&quot;, &quot;twOauthTokenSecret&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;user_id&quot;, &quot;twUserId&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;screen_name&quot;, &quot;twScreenName&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="" created="Tue, 29 Apr 2014 16:09:03 GMT" pgfnum="40644"/>
					<outline text="//redirect if there are params on the url that invoked us -- 4/29/14 by DW" created="Tue, 29 Apr 2014 16:03:36 GMT" pgfnum="40636">
						<outline text="if (flTwitterParamsPresent &amp;&amp; flRedirectIfParamsPresent) {" created="Tue, 11 Jun 2013 23:26:25 GMT" pgfnum="25798">
							<outline text="window.location.replace (window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;))); //7/19/17 by DW"/>
							<outline text="window.location.href = window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;));" isComment="true" created="Tue, 11 Jun 2013 23:26:50 GMT" pgfnum="25800"/>
							<outline text="return;" created="Fri, 14 Jun 2013 15:22:33 GMT" pgfnum="26170"/>
							<outline text="}" created="Tue, 11 Jun 2013 23:26:43 GMT" pgfnum="25799"/>
							</outline>
						</outline>
					<outline text="" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41775"/>
					<outline text="return (flTwitterParamsPresent); //6/4/14 by DW" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41776"/>
					<outline text="}" created="Tue, 16 Apr 2013 22:17:28 GMT" pgfnum="22779"/>
					</outline>
				<outline text="function twIsTwitterConnected () {" created="Thu, 13 Jun 2013 22:55:44 GMT" pgfnum="26108">
					<outline text="Changes" isComment="true">
						<outline text="2/12/16; 10:33:06 PM by DW">
							<outline text="The access to localStorage can fail if the user has cookies turned off."/>
							</outline>
						</outline>
					<outline text="try {">
						<outline text="return (localStorage.twOauthToken != undefined);" created="Thu, 13 Jun 2013 22:56:06 GMT" pgfnum="26110"/>
						<outline text="}"/>
						</outline>
					<outline text="catch (err) {">
						<outline text="return (false);"/>
						<outline text="}"/>
						</outline>
					<outline text="}" created="Thu, 13 Jun 2013 22:56:01 GMT" pgfnum="26109"/>
					</outline>
				<outline text="function twGetUserScreenName (callback) {" created="Thu, 10 Jul 2014 00:26:36 GMT" pgfnum="42788">
					<outline text="$.ajax ({">
						<outline text="type: &quot;GET&quot;,"/>
						<outline text="url: twGetDefaultServer () + &quot;getmyscreenname&quot; + &quot;?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret),"/>
						<outline text="success: function (data) {">
							<outline text="console.log (JSON.stringify (data, undefined, 4));" created="Thu, 10 Jul 2014 00:28:12 GMT" pgfnum="42791"/>
							<outline text="callback (data);" created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481"/>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status) { ">
							<outline text="console.log (&quot;twGetUserScreenName: error == &quot; + JSON.stringify (status, undefined, 4));" created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848"/>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Thu, 10 Jul 2014 00:26:50 GMT" pgfnum="42789"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;);"/>
					<outline text="twGetOauthParams ();"/>
					<outline text="if (twIsTwitterConnected ()) {">
						<outline text="twGetUserScreenName (function (data) {">
							<outline text="console.log (jsonStringify (data));"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="test1/index.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;test app&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: Ubuntu;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 90px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/code/testing/tweeting/">
			<outline text="code.js">
				<outline text="function twGetDefaultServer () {">
					<outline text="var urlServer = &quot;http://localhost:1401/&quot;;" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="return (urlServer);"/>
					<outline text="}"/>
					</outline>
				<outline text="function twConnectToTwitter () {" created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25623">
					<outline text="var urlServer = twGetDefaultServer ();" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="function trimTrailing (s, ch) {" created="Mon, 11 Mar 2013 02:40:24 GMT" pgfnum="20129">
						<outline text="while (s.charAt (s.length - 1) == ch) {">
							<outline text="s = s.substr (0, s.length - 1);"/>
							<outline text="}" created="Thu, 24 Apr 2014 00:51:29 GMT" pgfnum="40514"/>
							</outline>
						<outline text="return (s);" created="Mon, 11 Mar 2013 02:43:18 GMT" pgfnum="20133"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:51:23 GMT" pgfnum="40513"/>
						</outline>
					<outline text="var s = trimTrailing (window.location.href, &quot;#&quot;);" created="Thu, 13 Jun 2013 23:16:23 GMT" pgfnum="26128"/>
					<outline text="var urlRedirectTo = urlServer + &quot;connect?redirect_url=&quot; + encodeURIComponent (s);" created="Mon, 28 Apr 2014 12:43:45 GMT" pgfnum="40579"/>
					<outline text="window.location.href = urlRedirectTo;" created="Mon, 28 Apr 2014 12:43:28 GMT" pgfnum="40575"/>
					<outline text="}" created="Mon, 10 Jun 2013 18:19:49 GMT" pgfnum="25632"/>
					</outline>
				<outline text="function twGetOauthParams (flRedirectIfParamsPresent) {" created="Tue, 16 Apr 2013 22:17:00 GMT" pgfnum="22778">
					<outline text="Changes" isComment="true" created="Thu, 24 Apr 2014 01:03:08 GMT" pgfnum="40520">
						<outline text="7/19/17; 6:40:17 PM by DW">
							<outline text="Use window.location.replace to redirecdt, per this Stack Overflow post.">
								<outline text="https://stackoverflow.com/a/506004/459452"/>
								</outline>
							</outline>
						<outline text="6/4/14; 8:08:46 AM by DW" created="Wed, 04 Jun 2014 12:08:46 GMT" pgfnum="41773">
							<outline text="Return flTwitterParamsPresent to the caller." created="Wed, 04 Jun 2014 12:08:47 GMT" pgfnum="41774"/>
							</outline>
						<outline text="6/4/14; 8:06:01 AM by DW" created="Wed, 04 Jun 2014 12:06:01 GMT" pgfnum="41771">
							<outline text="New optional param, flRedirectIfParamsPresent. If false, we don't redirect if params are present. This is needed in the stub that handles Twitter OAuth for Fargo. It just wants to quit after doing its job." created="Wed, 04 Jun 2014 12:06:02 GMT" pgfnum="41772"/>
							</outline>
						<outline text="4/23/14; 9:03:10 PM by DW" created="Thu, 24 Apr 2014 01:03:09 GMT" pgfnum="40521">
							<outline text="Get OAuth values for the user from the url params, copy into local storage. " created="Thu, 24 Apr 2014 01:03:11 GMT" pgfnum="40522"/>
							</outline>
						</outline>
					<outline text="var flTwitterParamsPresent = false;" created="Tue, 11 Jun 2013 23:25:57 GMT" pgfnum="25797"/>
					<outline text="if (flRedirectIfParamsPresent === undefined) { //6/4/14 by DW" created="Wed, 04 Jun 2014 12:05:32 GMT" pgfnum="41766">
						<outline text="flRedirectIfParamsPresent = true;" created="Wed, 04 Jun 2014 12:05:41 GMT" pgfnum="41769"/>
						<outline text="}" created="Wed, 04 Jun 2014 12:05:46 GMT" pgfnum="41770"/>
						</outline>
					<outline text="function getURLParameter (name) {">
						<outline text="return (decodeURI ((RegExp(name + '=' + '(.+?)(&amp;|$)').exec(location.search)||[,null])[1]));"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:54:02 GMT" pgfnum="40519"/>
						</outline>
					<outline text="function getParam (paramname, objname) {" created="Thu, 24 Apr 2014 01:03:43 GMT" pgfnum="40523">
						<outline text="var val = getURLParameter (paramname);" created="Thu, 24 Apr 2014 01:04:57 GMT" pgfnum="40531"/>
						<outline text="if (val != &quot;null&quot;) {" created="Thu, 24 Apr 2014 01:05:05 GMT" pgfnum="40532">
							<outline text="localStorage [objname] = val;" created="Thu, 24 Apr 2014 01:04:09 GMT" pgfnum="40529"/>
							<outline text="flTwitterParamsPresent = true;" created="Tue, 29 Apr 2014 16:14:54 GMT" pgfnum="40646"/>
							<outline text="}" created="Thu, 24 Apr 2014 01:05:12 GMT" pgfnum="40533"/>
							</outline>
						<outline text="}" created="Thu, 24 Apr 2014 01:03:55 GMT" pgfnum="40527"/>
						</outline>
					<outline text="getParam (&quot;oauth_token&quot;, &quot;twOauthToken&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;oauth_token_secret&quot;, &quot;twOauthTokenSecret&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;user_id&quot;, &quot;twUserId&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;screen_name&quot;, &quot;twScreenName&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="" created="Tue, 29 Apr 2014 16:09:03 GMT" pgfnum="40644"/>
					<outline text="//redirect if there are params on the url that invoked us -- 4/29/14 by DW" created="Tue, 29 Apr 2014 16:03:36 GMT" pgfnum="40636">
						<outline text="if (flTwitterParamsPresent &amp;&amp; flRedirectIfParamsPresent) {" created="Tue, 11 Jun 2013 23:26:25 GMT" pgfnum="25798">
							<outline text="window.location.replace (window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;))); //7/19/17 by DW"/>
							<outline text="window.location.href = window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;));" isComment="true" created="Tue, 11 Jun 2013 23:26:50 GMT" pgfnum="25800"/>
							<outline text="return;" created="Fri, 14 Jun 2013 15:22:33 GMT" pgfnum="26170"/>
							<outline text="}" created="Tue, 11 Jun 2013 23:26:43 GMT" pgfnum="25799"/>
							</outline>
						</outline>
					<outline text="" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41775"/>
					<outline text="return (flTwitterParamsPresent); //6/4/14 by DW" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41776"/>
					<outline text="}" created="Tue, 16 Apr 2013 22:17:28 GMT" pgfnum="22779"/>
					</outline>
				<outline text="function twIsTwitterConnected () {" created="Thu, 13 Jun 2013 22:55:44 GMT" pgfnum="26108">
					<outline text="Changes" isComment="true">
						<outline text="2/12/16; 10:33:06 PM by DW">
							<outline text="The access to localStorage can fail if the user has cookies turned off."/>
							</outline>
						</outline>
					<outline text="try {">
						<outline text="return (localStorage.twOauthToken != undefined);" created="Thu, 13 Jun 2013 22:56:06 GMT" pgfnum="26110"/>
						<outline text="}"/>
						</outline>
					<outline text="catch (err) {">
						<outline text="return (false);"/>
						<outline text="}"/>
						</outline>
					<outline text="}" created="Thu, 13 Jun 2013 22:56:01 GMT" pgfnum="26109"/>
					</outline>
				<outline text="function twGetUserScreenName (callback) {" created="Thu, 10 Jul 2014 00:26:36 GMT" pgfnum="42788">
					<outline text="$.ajax ({">
						<outline text="type: &quot;GET&quot;,"/>
						<outline text="url: twGetDefaultServer () + &quot;getmyscreenname&quot; + &quot;?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret),"/>
						<outline text="success: function (data) {">
							<outline text="console.log (JSON.stringify (data, undefined, 4));" created="Thu, 10 Jul 2014 00:28:12 GMT" pgfnum="42791"/>
							<outline text="callback (data);" created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481"/>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status) { ">
							<outline text="console.log (&quot;twGetUserScreenName: error == &quot; + JSON.stringify (status, undefined, 4));" created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848"/>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Thu, 10 Jul 2014 00:26:50 GMT" pgfnum="42789"/>
					</outline>
				<outline text="function twTweet (status, inReplyToId, callback) {" created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25622">
					<outline text="Changes" isComment="true" created="Thu, 05 Jun 2014 13:55:32 GMT" pgfnum="41784">
						<outline text="8/2/16; 3:38:54 PM by DW">
							<outline text="The error message format seems to have changed (again?) -- changed the code accordingly."/>
							</outline>
						<outline text="12/16/14; 2:50:13 PM by DW">
							<outline text="It looks like the format of the struct returned by Twitter on error has changed. Now instead of an array, they return a struct? Not sure. But this effects how we call the callback on error, and the way we did it might break some? I looked at Radio3 and LCE, and they don't call this routine directly. (We don't call the callback on errors now, and we put up an alert dialog.)"/>
							</outline>
						<outline text="9/2/14; 4:19:50 PM by DW" created="Tue, 02 Sep 2014 20:19:49 GMT" pgfnum="43234">
							<outline text="Add an error branch." created="Tue, 02 Sep 2014 20:19:50 GMT" pgfnum="43235"/>
							</outline>
						<outline text="6/5/14; 9:55:40 AM by DW" created="Thu, 05 Jun 2014 13:55:38 GMT" pgfnum="41785">
							<outline text="oauthToken, oauthTokenSecret and callback become optional params. " created="Thu, 05 Jun 2014 13:55:41 GMT" pgfnum="41786"/>
							</outline>
						</outline>
					<outline text="var urlServer = twGetDefaultServer ();"/>
					<outline text="function encode (s) {" created="Wed, 23 Apr 2014 17:16:42 GMT" pgfnum="40479">
						<outline text="return (encodeURIComponent (s));" created="Fri, 21 Jun 2013 15:07:18 GMT" pgfnum="26894"/>
						<outline text="}" created="Wed, 23 Apr 2014 17:16:46 GMT" pgfnum="40480"/>
						</outline>
					<outline text="if (inReplyToId == undefined) {" created="Wed, 23 Apr 2014 17:13:23 GMT" pgfnum="40473">
						<outline text="inReplyToId = 0;" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
						<outline text="}" created="Wed, 23 Apr 2014 17:13:31 GMT" pgfnum="40476"/>
						</outline>
					<outline text="" created="Sat, 07 Jun 2014 11:47:43 GMT" pgfnum="41789"/>
					<outline text="var apiUrl = urlServer + &quot;tweet?oauth_token=&quot; + encode (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encode (localStorage.twOauthTokenSecret) + &quot;&amp;status=&quot; + encode (status) + &quot;&amp;in_reply_to_status_id=&quot; + encode (inReplyToId);" created="Sat, 07 Jun 2014 11:47:43 GMT" pgfnum="41790"/>
					<outline text="console.log (&quot;twTweet: &quot; + apiUrl);" created="Sat, 07 Jun 2014 11:47:51 GMT" pgfnum="41794"/>
					<outline text="" created="Sat, 07 Jun 2014 11:47:44 GMT" pgfnum="41793"/>
					<outline text="$.ajax ({">
						<outline text="type: &quot;GET&quot;,"/>
						<outline text="url: apiUrl,"/>
						<outline text="success: function (data){">
							<outline text="console.log (&quot;twTweet: twitter response == &quot; + JSON.stringify (data, undefined, 4)); //9/3/14 by DW" created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939"/>
							<outline text="if (callback != undefined) { //6/5/14 by DW" created="Thu, 05 Jun 2014 13:55:13 GMT" pgfnum="41782">
								<outline text="callback (data);" created="Thu, 24 Apr 2014 12:47:03 GMT" pgfnum="40460"/>
								<outline text="}" created="Thu, 05 Jun 2014 13:55:20 GMT" pgfnum="41783"/>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status) { ">
							<outline text="var twitterResponse = JSON.parse (status.responseText);" created="Tue, 02 Sep 2014 20:21:32 GMT" pgfnum="43236"/>
							<outline text="var innerResponse = JSON.parse (twitterResponse.data);" created="Tue, 02 Sep 2014 20:32:21 GMT" pgfnum="43237"/>
							<outline text="var theError = innerResponse.errors [0].message; //8/2/16 by DW"/>
							<outline text="console.log (&quot;twTweet: error reported by twitter == &quot; + theError);"/>
							<outline text="alert (&quot;Twitter reported an error: \&quot;&quot; + theError + &quot;\&quot;&quot;);"/>
							<outline text=""/>
							<outline text="old code -- pre-December 2014" isComment="true">
								<outline text="console.log (&quot;twTweet: error, twitter response == &quot; + JSON.stringify (innerResponse.errors [0], undefined, 4));" isComment="true" created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939"/>
								<outline text="if (callback != undefined) { //9/2/14 by DW" isComment="true" created="Thu, 05 Jun 2014 13:55:13 GMT" pgfnum="41782">
									<outline text="innerResponse.errors [0].flError = true; //signal to callback that it was an error" created="Tue, 02 Sep 2014 20:35:18 GMT" pgfnum="43238"/>
									<outline text="callback (innerResponse.errors [0]);" created="Thu, 24 Apr 2014 12:47:03 GMT" pgfnum="40460"/>
									<outline text="}" created="Thu, 05 Jun 2014 13:55:20 GMT" pgfnum="41783"/>
									</outline>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 10 Jun 2013 18:07:45 GMT" pgfnum="25627"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;);"/>
					<outline text="twGetOauthParams ();"/>
					<outline text="if (twIsTwitterConnected ()) {">
						<outline text="twGetUserScreenName (function (data) {">
							<outline text="console.log (jsonStringify (data));"/>
							<outline text="});"/>
							</outline>
						<outline text="twTweet (&quot;This is a test. Please ignore...&quot;, 0, function (data) {">
							<outline text="console.log (jsonStringify (data));"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="index.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;test app&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: Ubuntu;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 90px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script">
			<outline text="nodeEditorSuite.utilities.buildTwitterPackage ()"/>
			</outline>
		</body>
	</opml>
