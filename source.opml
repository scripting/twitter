<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sat, 08 May 2021 18:56:32 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: davetwitter</title>
		<dateCreated>Sat, 07 Oct 2017 13:46:41 GMT</dateCreated>
		<dateModified>Sat, 08 May 2021 18:56:32 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 12, 21, 55, 60, 65, 66, 71, 81, 83, 86, 88, 107, 109, 111, 117, 118, 119, 122, 128, 138, 139, 148, 149, 150, 153, 161, 162, 170, 171, 172, 174, 176, 179, 182, 184, 186, 198, 206, 207, 210, 212, 214, 221, 225, 233, 235, 238, 244, 252, 267, 268, 274, 277, 280, 285, 288, 292, 297, 308, 311, 314, 317, 320, 323, 326, 329, 332, 350, 351, 360</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>57</windowTop>
		<windowLeft>827</windowLeft>
		<windowBottom>1204</windowBottom>
		<windowRight>1941</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/davetwitter/">
			<outline text="package.json">
				<outline text="{ ">
					<outline text="&quot;name&quot;: &quot;davetwitter&quot;, "/>
					<outline text="&quot;description&quot;: &quot;Basic twitter functionality for server apps.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.6.25&quot;,"/>
					<outline text="&quot;main&quot;: &quot;davetwitter.js&quot;,"/>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;davetwitter.js&quot;"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;scripts&quot;: {">
						<outline text="&quot;start&quot;: &quot;node main.js&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot; : &quot;git&quot;,"/>
						<outline text="&quot;url&quot; : &quot;https://github.com/scripting/twitter.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;node-twitter-api&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;"/>
						<outline text="}, "/>
						</outline>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;engines&quot;: { ">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="davetwitter.js">
				<outline text="var myVersion = &quot;0.6.25&quot;, myProductName = &quot;davetwitter&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text=""/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const twitterAPI = require (&quot;node-twitter-api&quot;);" created="Mon, 21 Apr 2014 13:38:52 GMT" pgfnum="40297"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text="" isComment="true"/>
				<outline text="exports.start = start; "/>
				<outline text="exports.getScreenName = getScreenName;"/>
				<outline text="exports.getUserInfo = getUserInfo; //1/2/18 by DW"/>
				<outline text="exports.sendTweet = sendTweet; //12/17/18 by DW"/>
				<outline text="exports.getTimeline = getTimeline; //3/8/21 by DW" created="Mon, 08 Mar 2021 20:30:32 GMT"/>
				<outline text="exports.normalizeTimeString = normalizeTimeString; //3/11/21 by DW" created="Mon, 08 Mar 2021 20:30:32 GMT"/>
				<outline text="exports.getTweetUrl = getTweetUrl; //3/12/21 by DW" created="Fri, 12 Mar 2021 14:33:58 GMT"/>
				<outline text="exports.getTweet = getTweet; //3/8/21 by DW" created="Mon, 08 Mar 2021 20:30:32 GMT"/>
				<outline text="exports.getThread = getThread; //3/11/21 by DW" created="Mon, 08 Mar 2021 20:30:32 GMT"/>
				<outline text="exports.getRecentTweets = getRecentTweets; //3/13/21 by DW" created="Sat, 13 Mar 2021 21:50:50 GMT"/>
				<outline text="exports.getFollowers = getFollowers; //3/17/21 by DW" created="Wed, 17 Mar 2021 17:33:43 GMT"/>
				<outline text="exports.getFollowed = getFollowed; //3/17/21 by DW" created="Wed, 17 Mar 2021 17:33:43 GMT"/>
				<outline text="exports.getAccountSettings = getAccountSettings; //3/18/21 by DW" created="Thu, 18 Mar 2021 21:15:24 GMT"/>
				<outline text="exports.setAccountSettings = setAccountSettings; //3/20/21 by DW" created="Sat, 20 Mar 2021 14:57:57 GMT"/>
				<outline text="exports.getUserLists = getUserLists; //5/5/21 by DW" created="Sat, 20 Mar 2021 14:57:57 GMT"/>
				<outline text="exports.getListMembers = getListMembers; //5/5/21 by DW" created="Sat, 20 Mar 2021 14:57:57 GMT"/>
				<outline text="" created="Sun, 02 May 2021 13:39:54 GMT"/>
				<outline text=""/>
				<outline text="var config = {">
					<outline text="httpPort: 1401,"/>
					<outline text="myDomain: &quot;localhost&quot;,"/>
					<outline text="twitterConsumerKey: undefined,"/>
					<outline text="twitterConsumerSecret: undefined,"/>
					<outline text="flForceTwitterLogin: false,"/>
					<outline text="flLogToConsole: false, //1/2/18 by DW"/>
					<outline text="flAllowAccessFromAnywhere: true, //1/2/18 by DW"/>
					<outline text="flPostEnabled: false, //1/3/18 by DW"/>
					<outline text="httpRequestCallback: function (theRequest) {">
						<outline text="return (false); //not consumed"/>
						<outline text="},"/>
						</outline>
					<outline text="http404Callback: function (theRequest) { //1/24/21 by DW">
						<outline text="return (false); //not consumed"/>
						<outline text="},"/>
						</outline>
					<outline text="blockedAddresses: new Array (), //4/17/18 by DW"/>
					<outline text="cacheFolder: &quot;data/cache/&quot;, //3/11/21 by DW" created="Mon, 08 Mar 2021 21:11:49 GMT"/>
					<outline text="flUseCache: true, //3/11/21 by DW" created="Thu, 11 Mar 2021 17:44:13 GMT"/>
					<outline text="flServerEnabled: true //5/2/21 by DW" created="Sun, 02 May 2021 13:43:47 GMT"/>
					<outline text="};"/>
					</outline>
				<outline text="var requestTokens = []; //used in the OAuth dance" created="Mon, 21 Apr 2014 14:41:52 GMT" pgfnum="40331"/>
				<outline text="var screenNameCache = []; " created="Wed, 09 Jul 2014 23:26:56 GMT" pgfnum="42738"/>
				<outline text="var cachedTwitterConfig = undefined; //4/22/21 by DW" created="Thu, 22 Apr 2021 19:51:01 GMT"/>
				<outline text=""/>
				<outline text="function newTwitter (myCallback) {" created="Mon, 21 Apr 2014 23:20:54 GMT" pgfnum="40415">
					<outline text="var twitter = new twitterAPI ({">
						<outline text="consumerKey: config.twitterConsumerKey,"/>
						<outline text="consumerSecret: config.twitterConsumerSecret,"/>
						<outline text="callback: myCallback" created="Mon, 21 Apr 2014 16:29:45 GMT" pgfnum="40363"/>
						<outline text="});"/>
						</outline>
					<outline text="return (twitter);" created="Mon, 21 Apr 2014 23:21:39 GMT" pgfnum="40417"/>
					<outline text="}" created="Mon, 21 Apr 2014 23:21:01 GMT" pgfnum="40416"/>
					</outline>
				<outline text="" created="Sun, 02 May 2021 13:40:25 GMT"/>
				<outline text="function normalizeTimeString (when) { //3/11/21 by DW -- return a GMT-based time string" created="Wed, 10 Mar 2021 16:47:38 GMT">
					<outline text="when = new Date (when);" created="Wed, 10 Mar 2021 16:47:59 GMT"/>
					<outline text="return (when.toUTCString ());" created="Wed, 10 Mar 2021 16:48:05 GMT"/>
					<outline text="}" created="Wed, 10 Mar 2021 16:47:46 GMT"/>
					</outline>
				<outline text="function getTheTwitterError (twitterErrorStruct) { //3/18/21 by DW" created="Wed, 17 Mar 2021 17:26:09 GMT">
					<outline text="Changes" isComment="true" created="Thu, 18 Mar 2021 15:32:25 GMT">
						<outline text="4/22/21; 12:25:16 PM by DW" created="Thu, 22 Apr 2021 16:25:15 GMT">
							<outline text="We're getting an error when we try to parse the data, so we catch it and return that error instead. " created="Thu, 22 Apr 2021 16:25:16 GMT"/>
							</outline>
						<outline text="3/18/21; 11:32:28 AM by DW" created="Thu, 18 Mar 2021 15:32:26 GMT">
							<outline text="Twitter doesn't return a normal error struct, so we convert. " created="Thu, 18 Mar 2021 15:32:28 GMT"/>
							</outline>
						</outline>
					<outline text="try {" created="Thu, 22 Apr 2021 16:25:54 GMT">
						<outline text="var data  = JSON.parse (twitterErrorStruct.data);" created="Thu, 18 Mar 2021 15:32:56 GMT"/>
						<outline text="return (data.errors [0]);" created="Thu, 18 Mar 2021 15:34:36 GMT"/>
						<outline text="}" created="Thu, 22 Apr 2021 16:25:58 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Thu, 22 Apr 2021 16:26:00 GMT">
						<outline text="console.log (&quot;getTheTwitterError: twitterErrorStruct == &quot; + utils.jsonStringify (twitterErrorStruct));" created="Thu, 22 Apr 2021 16:26:17 GMT"/>
						<outline text="return (err);" created="Thu, 22 Apr 2021 16:26:14 GMT"/>
						<outline text="}" created="Thu, 22 Apr 2021 16:26:03 GMT"/>
						</outline>
					<outline text="}" created="Thu, 18 Mar 2021 15:32:13 GMT"/>
					</outline>
				<outline text="function getInfoAboutTweet (rawDataObject) { //so there's consistency in info we return about tweets -- 5/8/21 by DW" created="Fri, 07 May 2021 16:10:34 GMT">
					<outline text="var screenname = rawDataObject.user.screen_name;" created="Sat, 08 May 2021 16:23:57 GMT"/>
					<outline text="var id = rawDataObject.id_str;" created="Sat, 08 May 2021 16:39:42 GMT"/>
					<outline text="var idParent = rawDataObject.in_reply_to_status_id_str;" created="Sat, 08 May 2021 17:22:14 GMT"/>
					<outline text="" created="Sat, 08 May 2021 17:58:31 GMT"/>
					<outline text="if (idParent !== undefined) {" created="Sat, 08 May 2021 17:58:32 GMT">
						<outline text="if (idParent == null) {" created="Sat, 08 May 2021 17:59:11 GMT">
							<outline text="idParent = undefined;" created="Sat, 08 May 2021 17:59:25 GMT"/>
							<outline text="}" created="Sat, 08 May 2021 17:59:20 GMT"/>
							</outline>
						<outline text="}" created="Sat, 08 May 2021 17:58:43 GMT"/>
						</outline>
					<outline text="console.log (&quot;getInfoAboutTweet: rawDataObject == &quot; + utils.jsonStringify (rawDataObject));" isComment="true" created="Sat, 08 May 2021 17:58:32 GMT"/>
					<outline text="var returnedStruct = {" created="Wed, 05 May 2021 16:00:30 GMT">
						<outline text="text: rawDataObject.full_text," created="Fri, 07 May 2021 14:56:31 GMT"/>
						<outline text="id," created="Fri, 07 May 2021 14:55:56 GMT"/>
						<outline text="screenname," created="Fri, 07 May 2021 14:58:22 GMT"/>
						<outline text="link: &quot;https://twitter.com/&quot; + screenname + &quot;/status/&quot; + id," created="Sat, 08 May 2021 16:40:51 GMT"/>
						<outline text="when: normalizeTimeString (rawDataObject.created_at)," created="Fri, 07 May 2021 14:57:04 GMT"/>
						<outline text="idParent" created="Mon, 08 Mar 2021 19:27:30 GMT"/>
						<outline text="};" created="Fri, 07 May 2021 16:09:31 GMT"/>
						</outline>
					<outline text="return (returnedStruct);" created="Fri, 07 May 2021 16:11:21 GMT"/>
					<outline text="}" created="Fri, 07 May 2021 16:10:47 GMT"/>
					</outline>
				<outline text="function getInfoAboutUser (user) { " created="Sat, 08 May 2021 18:24:02 GMT">
					<outline text="var url = undefined;" created="Sat, 08 May 2021 18:30:19 GMT"/>
					<outline text="try {" created="Wed, 10 Mar 2021 16:38:00 GMT">
						<outline text="url = theTweet.user.entities.url.urls [0].expanded_url;" created="Wed, 10 Mar 2021 16:38:39 GMT"/>
						<outline text="}" created="Wed, 10 Mar 2021 16:38:44 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Wed, 10 Mar 2021 16:38:45 GMT">
						<outline text="}" created="Wed, 10 Mar 2021 16:38:53 GMT"/>
						</outline>
					<outline text="var returnedStruct = {" created="Wed, 05 May 2021 16:00:30 GMT">
						<outline text="screenname: user.screen_name," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
						<outline text="name: user.name," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
						<outline text="id: user.id_str," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
						<outline text="description: user.description," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
						<outline text="url," created="Wed, 10 Mar 2021 16:37:22 GMT"/>
						<outline text="location: user.location," created="Sat, 08 May 2021 18:29:14 GMT"/>
						<outline text="whenCreated: normalizeTimeString (user.created_at)," created="Sat, 08 May 2021 18:32:08 GMT"/>
						<outline text="ctFollowers: user.followers_count," created="Sat, 08 May 2021 18:31:24 GMT"/>
						<outline text="ctFollowed: user.friends_count," created="Sat, 08 May 2021 18:31:45 GMT"/>
						<outline text="ctFavorites: user.favourites_count," created="Sat, 08 May 2021 18:32:22 GMT"/>
						<outline text="ctTweets: user.statuses_count" created="Sat, 08 May 2021 18:32:45 GMT"/>
						<outline text="};" created="Fri, 07 May 2021 16:09:31 GMT"/>
						</outline>
					<outline text="return (returnedStruct);" created="Fri, 07 May 2021 16:11:21 GMT"/>
					<outline text="}" created="Sat, 08 May 2021 18:24:15 GMT"/>
					</outline>
				<outline text="function getScreenName (accessToken, accessTokenSecret, callback) {" created="Wed, 09 Jul 2014 23:27:42 GMT" pgfnum="42742">
					<outline text="for (var i = 0; i &lt; screenNameCache.length; i++) { //see if we can get it from the cache first" created="Wed, 09 Jul 2014 23:28:55 GMT" pgfnum="42746">
						<outline text="var obj = screenNameCache [i];" created="Wed, 09 Jul 2014 23:29:55 GMT" pgfnum="42752"/>
						<outline text="if ((obj.accessToken == accessToken) &amp;&amp; (obj.accessTokenSecret == accessTokenSecret)) {" created="Wed, 09 Jul 2014 23:30:08 GMT" pgfnum="42753">
							<outline text="obj.ctAccesses++;" created="Wed, 09 Jul 2014 23:36:41 GMT" pgfnum="42760"/>
							<outline text="callback (obj.screenName);" created="Wed, 09 Jul 2014 23:30:51 GMT" pgfnum="42755"/>
							<outline text="return;" created="Wed, 09 Jul 2014 23:36:20 GMT" pgfnum="42759"/>
							<outline text="}" created="Wed, 09 Jul 2014 23:30:25 GMT" pgfnum="42754"/>
							</outline>
						<outline text="}" created="Wed, 09 Jul 2014 23:29:10 GMT" pgfnum="42751"/>
						</outline>
					<outline text="newTwitter ().verifyCredentials (accessToken, accessTokenSecret, function (error, data, response) {" created="Fri, 02 May 2014 16:45:32 GMT" pgfnum="40867">
						<outline text="if (error) {" created="Fri, 02 May 2014 16:47:09 GMT" pgfnum="40872">
							<outline text="callback (undefined);    "/>
							<outline text="}" created="Fri, 02 May 2014 16:47:16 GMT" pgfnum="40873"/>
							</outline>
						<outline text="else {" created="Fri, 02 May 2014 16:47:17 GMT" pgfnum="40874">
							<outline text="screenNameCache [screenNameCache.length] = {">
								<outline text="accessToken:  accessToken," created="Wed, 09 Jul 2014 23:38:53 GMT" pgfnum="42772"/>
								<outline text="accessTokenSecret:  accessTokenSecret," created="Wed, 09 Jul 2014 23:38:53 GMT" pgfnum="42772"/>
								<outline text="screenName:  data.screen_name, " created="Wed, 09 Jul 2014 23:39:18 GMT" pgfnum="42774"/>
								<outline text="ctAccesses:  0" created="Wed, 09 Jul 2014 23:39:43 GMT" pgfnum="42775"/>
								<outline text="};"/>
								</outline>
							<outline text="callback (data.screen_name);" created="Wed, 09 Jul 2014 23:30:51 GMT" pgfnum="42755"/>
							<outline text="}" created="Fri, 02 May 2014 16:47:19 GMT" pgfnum="40875"/>
							</outline>
						<outline text="});" created="Fri, 02 May 2014 16:47:01 GMT" pgfnum="40871"/>
						</outline>
					<outline text="}" created="Wed, 09 Jul 2014 23:28:19 GMT" pgfnum="42744"/>
					<outline text="" created="Wed, 09 Jul 2014 23:27:48 GMT" pgfnum="42743"/>
					</outline>
				<outline text="function deleteInScreenNameCache (accessToken, accessTokenSecret, callback) { //3/24/19 by DW">
					<outline text="for (var i = 0; i &lt; screenNameCache.length; i++) {" created="Wed, 09 Jul 2014 23:28:55 GMT" pgfnum="42746">
						<outline text="var obj = screenNameCache [i];" created="Wed, 09 Jul 2014 23:29:55 GMT" pgfnum="42752"/>
						<outline text="if ((obj.accessToken == accessToken) &amp;&amp; (obj.accessTokenSecret == accessTokenSecret)) {" created="Wed, 09 Jul 2014 23:30:08 GMT" pgfnum="42753">
							<outline text="callback (obj);"/>
							<outline text="screenNameCache.splice (i, 1);"/>
							<outline text="return;" created="Wed, 09 Jul 2014 23:36:20 GMT" pgfnum="42759"/>
							<outline text="}" created="Wed, 09 Jul 2014 23:30:25 GMT" pgfnum="42754"/>
							</outline>
						<outline text="}" created="Wed, 09 Jul 2014 23:29:10 GMT" pgfnum="42751"/>
						</outline>
					<outline text="callback ({">
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function saveRequestToken (requestToken, requestTokenSecret) {" created="Mon, 21 Apr 2014 16:42:08 GMT" pgfnum="40364">
					<outline text="var obj = new Object ();" created="Mon, 21 Apr 2014 16:42:32 GMT" pgfnum="40366"/>
					<outline text="obj.rt = requestToken;" created="Mon, 21 Apr 2014 16:42:39 GMT" pgfnum="40367"/>
					<outline text="obj.secret = requestTokenSecret;" created="Mon, 21 Apr 2014 16:42:44 GMT" pgfnum="40368"/>
					<outline text="requestTokens [requestTokens.length] = obj;" created="Mon, 25 Feb 2013 03:09:00 GMT" pgfnum="19069"/>
					<outline text="}" created="Mon, 21 Apr 2014 16:42:29 GMT" pgfnum="40365"/>
					</outline>
				<outline text="function findRequestToken (theRequestToken) {" created="Sat, 23 Nov 2013 16:35:47 GMT" pgfnum="32071">
					<outline text="for (var i = 0; i &lt; requestTokens.length; i++) {" created="Sat, 23 Nov 2013 16:36:28 GMT" pgfnum="32073">
						<outline text="if (requestTokens [i].rt == theRequestToken) {" created="Sat, 23 Nov 2013 16:36:39 GMT" pgfnum="32075">
							<outline text="var secret = requestTokens [i].secret;" created="Sat, 23 Nov 2013 16:37:11 GMT" pgfnum="32077"/>
							<outline text="requestTokens.splice (i, 1);" created="Mon, 21 Apr 2014 17:00:42 GMT" pgfnum="40379"/>
							<outline text="return (secret);" created="Mon, 21 Apr 2014 17:00:36 GMT" pgfnum="40377"/>
							<outline text="}" created="Sat, 23 Nov 2013 16:37:02 GMT" pgfnum="32076"/>
							</outline>
						<outline text="}" created="Sat, 23 Nov 2013 16:36:30 GMT" pgfnum="32074"/>
						</outline>
					<outline text="return (undefined);" created="Sat, 23 Nov 2013 16:37:19 GMT" pgfnum="32078"/>
					<outline text="}" created="Sat, 23 Nov 2013 16:36:01 GMT" pgfnum="32072"/>
					</outline>
				<outline text="function getUserInfo (accessToken, accessTokenSecret, screenname, callback) { //1/2/18 by DW">
					<outline text="var params = {screen_name: screenname};" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422"/>
					<outline text="newTwitter ().users (&quot;show&quot;, params, accessToken, accessTokenSecret, function (err, data, response) {">
						<outline text="if (err) {" created="Mon, 21 Apr 2014 23:12:55 GMT" pgfnum="40408">
							<outline text="callback (getTheTwitterError (err));"/>
							<outline text="}" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40409"/>
							</outline>
						<outline text="else {" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40410">
							<outline text="callback (undefined, data);" created="Sat, 21 Jun 2014 14:43:33 GMT" pgfnum="42366"/>
							<outline text="}" created="Mon, 21 Apr 2014 23:13:00 GMT" pgfnum="40411"/>
							</outline>
						<outline text="});" created="Mon, 21 Apr 2014 23:12:34 GMT" pgfnum="40407"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 08 May 2021 18:36:04 GMT"/>
				<outline text="function getUserInfoForVerb (accessToken, accessTokenSecret, screenname, callback) { //5/8/21 by DW">
					<outline text="getUserInfo (accessToken, accessTokenSecret, screenname, function (err, data) {" created="Sat, 08 May 2021 18:36:27 GMT">
						<outline text="if (err) {" created="Sat, 08 May 2021 18:36:44 GMT">
							<outline text="callback (err);" created="Sat, 08 May 2021 18:36:47 GMT"/>
							<outline text="}" created="Sat, 08 May 2021 18:36:50 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 08 May 2021 18:36:51 GMT">
							<outline text="callback (undefined, getInfoAboutUser (data));" created="Sat, 08 May 2021 18:36:56 GMT"/>
							<outline text="}" created="Sat, 08 May 2021 18:37:05 GMT"/>
							</outline>
						<outline text="});" created="Sat, 08 May 2021 18:36:40 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 08 May 2021 18:36:06 GMT"/>
				<outline text="function getUserInfoFromUserId (accessToken, accessTokenSecret, userid, callback) { //4/8/21 by DW -- xxx" created="Thu, 08 Apr 2021 15:36:45 GMT">
					<outline text="var params = {user_id: userid};" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422"/>
					<outline text="newTwitter ().users (&quot;show&quot;, params, accessToken, accessTokenSecret, function (err, data, response) {">
						<outline text="if (err) {" created="Mon, 21 Apr 2014 23:12:55 GMT" pgfnum="40408">
							<outline text="callback (getTheTwitterError (err));"/>
							<outline text="}" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40409"/>
							</outline>
						<outline text="else {" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40410">
							<outline text="callback (undefined, data);" created="Sat, 21 Jun 2014 14:43:33 GMT" pgfnum="42366"/>
							<outline text="}" created="Mon, 21 Apr 2014 23:13:00 GMT" pgfnum="40411"/>
							</outline>
						<outline text="});" created="Mon, 21 Apr 2014 23:12:34 GMT" pgfnum="40407"/>
						</outline>
					<outline text="}" created="Thu, 08 Apr 2021 15:37:18 GMT"/>
					</outline>
				<outline text="function getAccountSettings (accessToken, accessTokenSecret, callback) { //3/18/21 by DW" created="Thu, 18 Mar 2021 21:12:42 GMT">
					<outline text="newTwitter ().account (&quot;settings&quot;, {}, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:51:38 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:51:54 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:51:44 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:51:45 GMT">
							<outline text="callback (undefined, data);" created="Thu, 18 Mar 2021 17:52:06 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:51:46 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:51:32 GMT"/>
						</outline>
					<outline text="}" created="Thu, 18 Mar 2021 21:12:51 GMT"/>
					</outline>
				<outline text="function setAccountSettings (accessToken, accessTokenSecret, theSettings, callback) { //3/20/21 by DW" created="Thu, 18 Mar 2021 21:12:42 GMT">
					<outline text="Changes" isComment="true" created="Sat, 20 Mar 2021 15:09:23 GMT">
						<outline text="3/20/21; 11:09:26 AM by DW" created="Sat, 20 Mar 2021 15:09:25 GMT">
							<outline text="Not too useful. The settings appear to be the kinds of things you don't want to change. And they won't let you!  " created="Sat, 20 Mar 2021 15:09:26 GMT">
								<outline text="{">
									<outline text="&quot;time_zone&quot;: {">
										<outline text="&quot;name&quot;: &quot;Eastern Time (US &amp; Canada)&quot;,"/>
										<outline text="&quot;utc_offset&quot;: -14400,"/>
										<outline text="&quot;tzinfo_name&quot;: &quot;America/New_York&quot;"/>
										</outline>
									<outline text="},"/>
									<outline text="&quot;protected&quot;: false,"/>
									<outline text="&quot;screen_name&quot;: &quot;davewiner&quot;,"/>
									<outline text="&quot;always_use_https&quot;: true,"/>
									<outline text="&quot;use_cookie_personalization&quot;: true,"/>
									<outline text="&quot;sleep_time&quot;: {">
										<outline text="&quot;enabled&quot;: false,"/>
										<outline text="&quot;end_time&quot;: null,"/>
										<outline text="&quot;start_time&quot;: null"/>
										</outline>
									<outline text="},"/>
									<outline text="&quot;geo_enabled&quot;: true,"/>
									<outline text="&quot;language&quot;: &quot;en&quot;,"/>
									<outline text="&quot;discoverable_by_email&quot;: true,"/>
									<outline text="&quot;discoverable_by_mobile_phone&quot;: false,"/>
									<outline text="&quot;display_sensitive_media&quot;: true,"/>
									<outline text="&quot;allow_contributor_request&quot;: &quot;following&quot;,"/>
									<outline text="&quot;allow_dms_from&quot;: &quot;all&quot;,"/>
									<outline text="&quot;allow_dm_groups_from&quot;: &quot;following&quot;,"/>
									<outline text="&quot;translator_type&quot;: &quot;none&quot;,"/>
									<outline text="&quot;trend_location&quot;: [">
										<outline text="{">
											<outline text="&quot;name&quot;: &quot;New York&quot;,"/>
											<outline text="&quot;countryCode&quot;: &quot;US&quot;,"/>
											<outline text="&quot;url&quot;: &quot;http://where.yahooapis.com/v1/place/2459115&quot;,"/>
											<outline text="&quot;woeid&quot;: 2459115,"/>
											<outline text="&quot;placeType&quot;: {">
												<outline text="&quot;name&quot;: &quot;Town&quot;,"/>
												<outline text="&quot;code&quot;: 7"/>
												</outline>
											<outline text="},"/>
											<outline text="&quot;parentid&quot;: 23424977,"/>
											<outline text="&quot;country&quot;: &quot;United States&quot;"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="]"/>
									</outline>
								<outline text="}"/>
								</outline>
							</outline>
						</outline>
					<outline text="newTwitter ().account (&quot;settings&quot;, theSettings, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:51:38 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:51:54 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:51:44 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:51:45 GMT">
							<outline text="callback (undefined, data);" created="Thu, 18 Mar 2021 17:52:06 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:51:46 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:51:32 GMT"/>
						</outline>
					<outline text="}" created="Thu, 18 Mar 2021 21:12:51 GMT"/>
					</outline>
				<outline text="function getConfiguration (accessToken, accessTokenSecret, callback) {" created="Sat, 20 Mar 2021 15:24:05 GMT">
					<outline text="Changes" isComment="true" created="Thu, 22 Apr 2021 19:35:08 GMT">
						<outline text="4/23/21; 10:55:31 AM by DW" created="Fri, 23 Apr 2021 14:55:31 GMT">
							<outline text="there's a problem with this call the last few days. not sure what's up, but i can't stop here now. so f there's an error, return an old configuration, sampled today. " created="Fri, 23 Apr 2021 14:55:52 GMT"/>
							</outline>
						<outline text="4/22/21; 3:50:37 PM by DW" created="Thu, 22 Apr 2021 19:50:32 GMT">
							<outline text="We can cache the configuration, assuming it won't change while the server is running. " created="Thu, 22 Apr 2021 19:50:38 GMT"/>
							</outline>
						<outline text="4/22/21; 3:35:31 PM by DW" created="Thu, 22 Apr 2021 19:35:31 GMT">
							<outline text="If there's an error, show it locally in the console. We're getting an error here, with no clue what it is." created="Thu, 22 Apr 2021 19:35:10 GMT"/>
							</outline>
						</outline>
					<outline text="const oldConfiguration = {" created="Fri, 23 Apr 2021 14:55:00 GMT">
						<outline text="">
							<outline text="&quot;dm_text_character_limit&quot;: 10000,"/>
							<outline text="&quot;characters_reserved_per_media&quot;: 24,"/>
							<outline text="&quot;max_media_per_upload&quot;: 1,"/>
							<outline text="&quot;non_username_paths&quot;: [">
								<outline text="&quot;about&quot;,"/>
								<outline text="&quot;account&quot;,"/>
								<outline text="&quot;accounts&quot;,"/>
								<outline text="&quot;activity&quot;,"/>
								<outline text="&quot;all&quot;,"/>
								<outline text="&quot;announcements&quot;,"/>
								<outline text="&quot;anywhere&quot;,"/>
								<outline text="&quot;api_rules&quot;,"/>
								<outline text="&quot;api_terms&quot;,"/>
								<outline text="&quot;apirules&quot;,"/>
								<outline text="&quot;apps&quot;,"/>
								<outline text="&quot;auth&quot;,"/>
								<outline text="&quot;badges&quot;,"/>
								<outline text="&quot;blog&quot;,"/>
								<outline text="&quot;business&quot;,"/>
								<outline text="&quot;buttons&quot;,"/>
								<outline text="&quot;contacts&quot;,"/>
								<outline text="&quot;devices&quot;,"/>
								<outline text="&quot;direct_messages&quot;,"/>
								<outline text="&quot;download&quot;,"/>
								<outline text="&quot;downloads&quot;,"/>
								<outline text="&quot;edit_announcements&quot;,"/>
								<outline text="&quot;faq&quot;,"/>
								<outline text="&quot;favorites&quot;,"/>
								<outline text="&quot;find_sources&quot;,"/>
								<outline text="&quot;find_users&quot;,"/>
								<outline text="&quot;followers&quot;,"/>
								<outline text="&quot;following&quot;,"/>
								<outline text="&quot;friend_request&quot;,"/>
								<outline text="&quot;friendrequest&quot;,"/>
								<outline text="&quot;friends&quot;,"/>
								<outline text="&quot;goodies&quot;,"/>
								<outline text="&quot;help&quot;,"/>
								<outline text="&quot;home&quot;,"/>
								<outline text="&quot;i&quot;,"/>
								<outline text="&quot;im_account&quot;,"/>
								<outline text="&quot;inbox&quot;,"/>
								<outline text="&quot;invitations&quot;,"/>
								<outline text="&quot;invite&quot;,"/>
								<outline text="&quot;jobs&quot;,"/>
								<outline text="&quot;list&quot;,"/>
								<outline text="&quot;login&quot;,"/>
								<outline text="&quot;logo&quot;,"/>
								<outline text="&quot;logout&quot;,"/>
								<outline text="&quot;me&quot;,"/>
								<outline text="&quot;mentions&quot;,"/>
								<outline text="&quot;messages&quot;,"/>
								<outline text="&quot;mockview&quot;,"/>
								<outline text="&quot;newtwitter&quot;,"/>
								<outline text="&quot;notifications&quot;,"/>
								<outline text="&quot;nudge&quot;,"/>
								<outline text="&quot;oauth&quot;,"/>
								<outline text="&quot;phoenix_search&quot;,"/>
								<outline text="&quot;positions&quot;,"/>
								<outline text="&quot;privacy&quot;,"/>
								<outline text="&quot;public_timeline&quot;,"/>
								<outline text="&quot;related_tweets&quot;,"/>
								<outline text="&quot;replies&quot;,"/>
								<outline text="&quot;retweeted_of_mine&quot;,"/>
								<outline text="&quot;retweets&quot;,"/>
								<outline text="&quot;retweets_by_others&quot;,"/>
								<outline text="&quot;rules&quot;,"/>
								<outline text="&quot;saved_searches&quot;,"/>
								<outline text="&quot;search&quot;,"/>
								<outline text="&quot;sent&quot;,"/>
								<outline text="&quot;sessions&quot;,"/>
								<outline text="&quot;settings&quot;,"/>
								<outline text="&quot;share&quot;,"/>
								<outline text="&quot;signup&quot;,"/>
								<outline text="&quot;signin&quot;,"/>
								<outline text="&quot;similar_to&quot;,"/>
								<outline text="&quot;statistics&quot;,"/>
								<outline text="&quot;terms&quot;,"/>
								<outline text="&quot;tos&quot;,"/>
								<outline text="&quot;translate&quot;,"/>
								<outline text="&quot;trends&quot;,"/>
								<outline text="&quot;tweetbutton&quot;,"/>
								<outline text="&quot;twttr&quot;,"/>
								<outline text="&quot;update_discoverability&quot;,"/>
								<outline text="&quot;users&quot;,"/>
								<outline text="&quot;welcome&quot;,"/>
								<outline text="&quot;who_to_follow&quot;,"/>
								<outline text="&quot;widgets&quot;,"/>
								<outline text="&quot;zendesk_auth&quot;,"/>
								<outline text="&quot;media_signup&quot;"/>
								</outline>
							<outline text="],"/>
							<outline text="&quot;photo_size_limit&quot;: 3145728,"/>
							<outline text="&quot;photo_sizes&quot;: {">
								<outline text="&quot;thumb&quot;: {">
									<outline text="&quot;h&quot;: 150,"/>
									<outline text="&quot;resize&quot;: &quot;crop&quot;,"/>
									<outline text="&quot;w&quot;: 150"/>
									</outline>
								<outline text="},"/>
								<outline text="&quot;small&quot;: {">
									<outline text="&quot;h&quot;: 480,"/>
									<outline text="&quot;resize&quot;: &quot;fit&quot;,"/>
									<outline text="&quot;w&quot;: 340"/>
									</outline>
								<outline text="},"/>
								<outline text="&quot;medium&quot;: {">
									<outline text="&quot;h&quot;: 1200,"/>
									<outline text="&quot;resize&quot;: &quot;fit&quot;,"/>
									<outline text="&quot;w&quot;: 600"/>
									</outline>
								<outline text="},"/>
								<outline text="&quot;large&quot;: {">
									<outline text="&quot;h&quot;: 2048,"/>
									<outline text="&quot;resize&quot;: &quot;fit&quot;,"/>
									<outline text="&quot;w&quot;: 1024"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="},"/>
							<outline text="&quot;short_url_length&quot;: 23,"/>
							<outline text="&quot;short_url_length_https&quot;: 23"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="if (cachedTwitterConfig !== undefined) {" created="Thu, 22 Apr 2021 19:51:16 GMT">
						<outline text="callback (undefined, cachedTwitterConfig);" created="Thu, 22 Apr 2021 19:51:31 GMT"/>
						<outline text="}" created="Thu, 22 Apr 2021 19:51:24 GMT"/>
						</outline>
					<outline text="else {" created="Thu, 22 Apr 2021 19:51:24 GMT">
						<outline text="newTwitter ().help (&quot;configuration&quot;, {}, accessToken, accessTokenSecret, function (err, data) {" created="Tue, 06 May 2014 19:53:05 GMT" pgfnum="41204">
							<outline text="if (err) {" created="Thu, 22 Apr 2021 19:35:53 GMT">
								<outline text="console.log (&quot;getConfiguration: err == &quot; + utils.jsonStringify (err));" isComment="true" created="Thu, 22 Apr 2021 19:35:57 GMT"/>
								<outline text="callback (undefined, oldConfiguration);" created="Fri, 23 Apr 2021 14:56:44 GMT"/>
								<outline text="}" created="Thu, 22 Apr 2021 19:35:56 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 22 Apr 2021 19:51:49 GMT">
								<outline text="cachedTwitterConfig = data;" created="Thu, 22 Apr 2021 19:52:00 GMT"/>
								<outline text="}" created="Thu, 22 Apr 2021 19:51:52 GMT"/>
								</outline>
							<outline text="callback (err, data);" created="Thu, 22 Apr 2021 19:35:48 GMT"/>
							<outline text="});" created="Thu, 22 Apr 2021 19:35:46 GMT"/>
							</outline>
						<outline text="}" created="Thu, 22 Apr 2021 19:51:27 GMT"/>
						</outline>
					<outline text="}" created="Sat, 20 Mar 2021 16:10:25 GMT"/>
					</outline>
				<outline text="function getRateLimitStatus (accessToken, accessTokenSecret, resources, callback) { //3/20/21 by DW" created="Sat, 20 Mar 2021 15:24:05 GMT">
					<outline text="newTwitter ().rateLimitStatus ({resources}, accessToken, accessTokenSecret, callback);"/>
					<outline text="}" created="Sat, 20 Mar 2021 15:24:24 GMT"/>
					</outline>
				<outline text="function getSupportedLanguages (accessToken, accessTokenSecret, callback) {" created="Sat, 20 Mar 2021 15:24:05 GMT">
					<outline text="newTwitter ().help (&quot;languages&quot;, {}, accessToken, accessTokenSecret, callback);" created="Tue, 06 May 2014 19:53:05 GMT" pgfnum="41204"/>
					<outline text="}" created="Sat, 20 Mar 2021 16:10:25 GMT"/>
					</outline>
				<outline text="function updateProfileSettings (accessToken, accessTokenSecret, theProfile, callback) //3/20/21; 11:24:15 AM by DW" isComment="true" created="Sat, 20 Mar 2021 15:24:05 GMT">
					<outline text="Changes" isComment="true" created="Sat, 20 Mar 2021 15:24:15 GMT">
						<outline text="3/20/21; 11:24:19 AM by DW" created="Sat, 20 Mar 2021 15:24:17 GMT">
							<outline text="https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile" created="Sat, 20 Mar 2021 15:24:19 GMT"/>
							</outline>
						</outline>
					<outline text="}" created="Sat, 20 Mar 2021 15:24:24 GMT"/>
					</outline>
				<outline text="function sendTweet (accessToken, accessTokenSecret, status, inReplyToId, callback) {">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="status: status, " created="Thu, 18 Mar 2021 17:52:36 GMT"/>
						<outline text="in_reply_to_status_id: inReplyToId," created="Thu, 18 Mar 2021 17:52:40 GMT"/>
						<outline text="tweet_mode: &quot;extended&quot;"/>
						<outline text="};" created="Thu, 18 Mar 2021 17:52:48 GMT"/>
						</outline>
					<outline text="newTwitter ().statuses (&quot;update&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:51:38 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:51:54 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:51:44 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:51:45 GMT">
							<outline text="callback (undefined, data);" created="Thu, 18 Mar 2021 17:52:06 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:51:46 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:51:32 GMT"/>
						</outline>
					<outline text="if (config.rssFeed.enabled) {" isComment="true">
						<outline text="getScreenName (accessToken, accessTokenSecret, function (screenName) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
							<outline text="addTweetToFeed (screenName, status);"/>
							<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 08 May 2021 18:46:44 GMT"/>
				<outline text="function sendTweetForVerb (accessToken, accessTokenSecret, status, inReplyToId, callback) { //5/8/21 by DW">
					<outline text="sendTweet (accessToken, accessTokenSecret, status, inReplyToId, function (err, data) {" created="Sat, 08 May 2021 18:46:57 GMT">
						<outline text="if (err) {" created="Sat, 08 May 2021 18:47:14 GMT">
							<outline text="callback (err);" created="Sat, 08 May 2021 18:47:23 GMT"/>
							<outline text="}" created="Sat, 08 May 2021 18:47:17 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 08 May 2021 18:47:18 GMT">
							<outline text="callback (undefined, getInfoAboutTweet (data));" created="Sat, 08 May 2021 18:47:29 GMT"/>
							<outline text="}" created="Sat, 08 May 2021 18:47:20 GMT"/>
							</outline>
						<outline text="});" created="Sat, 08 May 2021 18:47:12 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 08 May 2021 18:46:44 GMT"/>
				<outline text="function getFollowers (accessToken, accessTokenSecret, screenname, callback) { //3/17/21 by DW">
					<outline text="var twitter = newTwitter (), theFollowersList = new Array ();" created="Mon, 21 Apr 2014 23:21:52 GMT" pgfnum="40418"/>
					<outline text="function getNextBatch (nextcursor) {" created="Wed, 17 Mar 2021 21:38:10 GMT">
						<outline text="" created="Wed, 17 Mar 2021 21:54:40 GMT"/>
						<outline text="console.log (&quot;getNextBatch: nextcursor == &quot; + nextcursor);" created="Wed, 17 Mar 2021 21:54:40 GMT"/>
						<outline text="" created="Wed, 17 Mar 2021 21:54:41 GMT"/>
						<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
							<outline text="cursor: nextcursor," created="Wed, 17 Mar 2021 21:40:15 GMT"/>
							<outline text="screen_name: screenname " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
							<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
							</outline>
						<outline text="twitter.followers (&quot;ids&quot;, params, accessToken, accessTokenSecret, function (err, theBatch) {">
							<outline text="if (err) {" created="Wed, 17 Mar 2021 21:42:04 GMT">
								<outline text="callback (getTheTwitterError (err));" created="Wed, 17 Mar 2021 21:42:06 GMT"/>
								<outline text="}" created="Wed, 17 Mar 2021 21:42:13 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 17 Mar 2021 21:42:14 GMT">
								<outline text="theFollowersList = theFollowersList.concat (theBatch.ids);" created="Wed, 17 Mar 2021 21:47:20 GMT"/>
								<outline text="if (theBatch.next_cursor == 0) { //we're done" created="Wed, 17 Mar 2021 21:43:32 GMT">
									<outline text="callback (undefined, theFollowersList);" created="Wed, 17 Mar 2021 21:44:59 GMT"/>
									<outline text="}" created="Wed, 17 Mar 2021 21:43:40 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 17 Mar 2021 21:43:40 GMT">
									<outline text="getNextBatch (theBatch.next_cursor_str);" created="Wed, 17 Mar 2021 21:44:59 GMT"/>
									<outline text="}" created="Wed, 17 Mar 2021 21:43:42 GMT"/>
									</outline>
								<outline text="}" created="Wed, 17 Mar 2021 21:42:16 GMT"/>
								</outline>
							<outline text="});" created="Wed, 17 Mar 2021 21:41:27 GMT"/>
							</outline>
						<outline text="}" created="Wed, 17 Mar 2021 21:38:35 GMT"/>
						</outline>
					<outline text="getNextBatch (-1); //start with the first batch" created="Wed, 17 Mar 2021 21:38:36 GMT"/>
					<outline text="old code" isComment="true" created="Wed, 17 Mar 2021 21:38:10 GMT">
						<outline text="var params = {" isComment="true" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
							<outline text="screen_name: screenname " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
							<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
							</outline>
						<outline text="twitter.followers (&quot;ids&quot;, params, accessToken, accessTokenSecret, callback);" isComment="true"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getFollowed (accessToken, accessTokenSecret, screenname, callback) { //3/17/21 by DW">
					<outline text="Changes" isComment="true" created="Thu, 18 Mar 2021 16:47:05 GMT">
						<outline text="3/18/21; 12:47:08 PM by DW" created="Thu, 18 Mar 2021 16:47:07 GMT">
							<outline text="Make it a batched operation." created="Thu, 18 Mar 2021 16:47:09 GMT"/>
							</outline>
						</outline>
					<outline text="var twitter = newTwitter (), theFollowedList = new Array ();" created="Mon, 21 Apr 2014 23:21:52 GMT" pgfnum="40418"/>
					<outline text="function getNextBatch (nextcursor) {" created="Wed, 17 Mar 2021 21:38:10 GMT">
						<outline text="console.log (&quot;getNextBatch: nextcursor == &quot; + nextcursor);" created="Wed, 17 Mar 2021 21:54:40 GMT"/>
						<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
							<outline text="cursor: nextcursor," created="Wed, 17 Mar 2021 21:40:15 GMT"/>
							<outline text="screen_name: screenname " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
							<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
							</outline>
						<outline text="twitter.friends (&quot;ids&quot;, params, accessToken, accessTokenSecret, function (err, theBatch) {">
							<outline text="if (err) {" created="Wed, 17 Mar 2021 21:42:04 GMT">
								<outline text="callback (getTheTwitterError (err));" created="Wed, 17 Mar 2021 21:42:06 GMT"/>
								<outline text="}" created="Wed, 17 Mar 2021 21:42:13 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 17 Mar 2021 21:42:14 GMT">
								<outline text="theFollowedList = theFollowedList.concat (theBatch.ids);" created="Wed, 17 Mar 2021 21:47:20 GMT"/>
								<outline text="if (theBatch.next_cursor == 0) { //we're done" created="Wed, 17 Mar 2021 21:43:32 GMT">
									<outline text="callback (undefined, theFollowedList);" created="Wed, 17 Mar 2021 21:44:59 GMT"/>
									<outline text="}" created="Wed, 17 Mar 2021 21:43:40 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 17 Mar 2021 21:43:40 GMT">
									<outline text="getNextBatch (theBatch.next_cursor_str);" created="Wed, 17 Mar 2021 21:44:59 GMT"/>
									<outline text="}" created="Wed, 17 Mar 2021 21:43:42 GMT"/>
									</outline>
								<outline text="}" created="Wed, 17 Mar 2021 21:42:16 GMT"/>
								</outline>
							<outline text="});" created="Thu, 18 Mar 2021 16:49:24 GMT"/>
							</outline>
						<outline text="}" created="Wed, 17 Mar 2021 21:38:35 GMT"/>
						</outline>
					<outline text="getNextBatch (-1); //start with the first batch" created="Wed, 17 Mar 2021 21:38:36 GMT"/>
					<outline text="old code" isComment="true" created="Thu, 18 Mar 2021 16:48:17 GMT">
						<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
							<outline text="screen_name: screenname " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
							<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
							</outline>
						<outline text="twitter.friends (&quot;ids&quot;, params, accessToken, accessTokenSecret, callback);"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getTimeline (accessToken, accessTokenSecret, whichTimeline, userId, sinceId, callback) { //2/11/21 by DW">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="user_id: userId, " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="trim_user: &quot;false&quot;," created="Tue, 16 Feb 2021 16:31:50 GMT"/>
						<outline text="tweet_mode: &quot;extended&quot;"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="if (sinceId !== undefined) {" created="Tue, 22 Apr 2014 02:02:36 GMT" pgfnum="40424">
						<outline text="params.since_id = sinceId;" created="Tue, 22 Apr 2014 02:02:49 GMT" pgfnum="40428"/>
						<outline text="}" created="Tue, 22 Apr 2014 02:02:45 GMT" pgfnum="40427"/>
						</outline>
					<outline text="newTwitter ().getTimeline (whichTimeline, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="callback (undefined, data);" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getTimelineForHttp (accessToken, accessTokenSecret, params, callback) { //3/21/21 by DW">
					<outline text="Changes" isComment="true" created="Sun, 21 Mar 2021 17:08:58 GMT">
						<outline text="5/8/21; 2:14:16 PM by DW" created="Sat, 08 May 2021 18:14:16 GMT">
							<outline text="We delete trim_user param if present, because we need the user's screenname for each tweet. " created="Sat, 08 May 2021 18:14:17 GMT"/>
							</outline>
						<outline text="5/8/21; 1:54:51 PM by DW" created="Sat, 08 May 2021 17:54:51 GMT">
							<outline text="Return an abbreviated object for each tweet. " created="Sat, 08 May 2021 17:54:52 GMT"/>
							</outline>
						<outline text="3/21/21; 1:09:01 PM by DW" created="Sun, 21 Mar 2021 17:09:00 GMT">
							<outline text="Create a specific entry poiunt for the HTTP caller, because the params work differently, and I couldn't shake up the interface for the original routine. " created="Sun, 21 Mar 2021 17:09:01 GMT"/>
							</outline>
						</outline>
					<outline text="params.tweet_mode = &quot;extended&quot;;" created="Sun, 21 Mar 2021 17:09:55 GMT"/>
					<outline text="if (params.trim_user !== undefined) {" created="Sat, 08 May 2021 18:13:54 GMT">
						<outline text="delete params.trim_user;" created="Sat, 08 May 2021 18:14:06 GMT"/>
						<outline text="}" created="Sat, 08 May 2021 18:14:09 GMT"/>
						</outline>
					<outline text="newTwitter ().getTimeline (params.whichtimeline, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="var returnedTimeline = new Array ();" created="Sat, 08 May 2021 17:53:28 GMT"/>
							<outline text="data.forEach (function (item) {" created="Sat, 08 May 2021 17:53:38 GMT">
								<outline text="returnedTimeline.push (getInfoAboutTweet (item));" created="Sat, 08 May 2021 17:54:06 GMT"/>
								<outline text="});" created="Sat, 08 May 2021 17:53:50 GMT"/>
								</outline>
							<outline text="callback (undefined, returnedTimeline);" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getTweetFromTwitter (accessToken, accessTokenSecret, id, callback) { //3/8/21 by DW">
					<outline text="Changes" isComment="true" created="Thu, 11 Mar 2021 17:41:33 GMT">
						<outline text="3/11/21; 12:41:36 PM by DW" created="Thu, 11 Mar 2021 17:41:35 GMT">
							<outline text="Changed name, we now use a cache for getting tweets. This is called when we don't have it in the cache. " created="Thu, 11 Mar 2021 17:41:37 GMT"/>
							</outline>
						</outline>
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="id, " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="tweet_mode: &quot;extended&quot;"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="newTwitter ().statuses (&quot;show&quot;, params, accessToken, accessTokenSecret, callback);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getTweet (accessToken, accessTokenSecret, id, callback) { //3/11/21 by DW" created="Mon, 08 Mar 2021 21:12:03 GMT">
					<outline text="var f = config.cacheFolder + &quot;tweets/&quot; + id + &quot;.json&quot;;" created="Mon, 08 Mar 2021 21:12:23 GMT"/>
					<outline text="utils.sureFilePath (f, function () {">
						<outline text="function getFromTwitter () {" created="Mon, 08 Mar 2021 21:14:52 GMT">
							<outline text="getTweetFromTwitter (accessToken, accessTokenSecret, id, function (err, theTweet) {" created="Mon, 08 Mar 2021 15:58:54 GMT">
								<outline text="if (err) {" created="Mon, 08 Mar 2021 15:58:23 GMT">
									<outline text="callback (err);" created="Mon, 08 Mar 2021 15:58:26 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:58:30 GMT"/>
									</outline>
								<outline text="else {" created="Mon, 08 Mar 2021 15:58:31 GMT">
									<outline text="callback (undefined, theTweet);" created="Mon, 08 Mar 2021 21:16:08 GMT"/>
									<outline text="fs.writeFile (f, utils.jsonStringify (theTweet), function (err) {" created="Mon, 08 Mar 2021 21:16:19 GMT">
										<outline text="if (err) {" created="Mon, 08 Mar 2021 21:18:15 GMT">
											<outline text="console.log (&quot;getTweet: failed to write tweet to cache, err.message == &quot; + err.message + &quot;.&quot;);" created="Mon, 08 Mar 2021 21:16:57 GMT"/>
											<outline text="}" created="Mon, 08 Mar 2021 21:18:17 GMT"/>
											</outline>
										<outline text="});" created="Mon, 08 Mar 2021 21:16:47 GMT"/>
										</outline>
									<outline text="}" created="Mon, 08 Mar 2021 15:58:41 GMT"/>
									</outline>
								<outline text="});" created="Mon, 08 Mar 2021 15:59:08 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 21:14:59 GMT"/>
							</outline>
						<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 21:12:45 GMT">
							<outline text="if (err) {" created="Mon, 08 Mar 2021 21:13:11 GMT">
								<outline text="getFromTwitter ();" created="Mon, 08 Mar 2021 21:14:37 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 21:13:14 GMT"/>
								</outline>
							<outline text="else {" created="Mon, 08 Mar 2021 21:13:14 GMT">
								<outline text="try {" created="Mon, 08 Mar 2021 21:14:07 GMT">
									<outline text="callback (undefined, JSON.parse (jsontext));" created="Mon, 08 Mar 2021 21:13:28 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 21:14:11 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Mon, 08 Mar 2021 21:14:12 GMT">
									<outline text="getFromTwitter ();" created="Mon, 08 Mar 2021 21:14:37 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 21:14:17 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 21:13:16 GMT"/>
								</outline>
							<outline text="});" created="Mon, 08 Mar 2021 21:13:07 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 21:12:19 GMT"/>
					</outline>
				<outline text="function getTweetForVerb (accessToken, accessTokenSecret, id, callback) {" created="Sat, 08 May 2021 16:21:11 GMT">
					<outline text="Changes" isComment="true" created="Sat, 08 May 2021 16:45:51 GMT">
						<outline text="5/8/21; 12:45:56 PM by DW" created="Sat, 08 May 2021 16:45:55 GMT">
							<outline text="Don't burden the scripter with all the info that Twitter returns about a tweet. Keep it simple." created="Sat, 08 May 2021 16:45:57 GMT"/>
							</outline>
						</outline>
					<outline text="getTweet (accessToken, accessTokenSecret, id, function (err, data) {" created="Sat, 08 May 2021 16:44:47 GMT">
						<outline text="if (err) {" created="Sat, 08 May 2021 16:45:08 GMT">
							<outline text="callback (err);" created="Sat, 08 May 2021 16:45:18 GMT"/>
							<outline text="}" created="Sat, 08 May 2021 16:45:10 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 08 May 2021 16:45:11 GMT">
							<outline text="callback (undefined, getInfoAboutTweet (data));" created="Sat, 08 May 2021 16:45:30 GMT"/>
							<outline text="}" created="Sat, 08 May 2021 16:45:13 GMT"/>
							</outline>
						<outline text="});" created="Sat, 08 May 2021 16:45:04 GMT"/>
						</outline>
					<outline text="}" created="Sat, 08 May 2021 16:44:35 GMT"/>
					</outline>
				<outline text="function getRecentTweets (screenname, accessToken, accessTokenSecret, callback) {" created="Tue, 22 Apr 2014 02:13:50 GMT" pgfnum="40431">
					<outline text="Changes" isComment="true">
						<outline text="3/13/21; 4:49:06 PM by DW" created="Sat, 13 Mar 2021 21:49:05 GMT">
							<outline text="Copied from tweetSucker app so it can be used from other apps. " created="Sat, 13 Mar 2021 21:49:06 GMT"/>
							</outline>
						<outline text="11/10/19; 10:03:24 AM by DW">
							<outline text="We get tweets from the indicated user going back, calling the callback for each. If it returns false, we stop calling back, we're done."/>
							</outline>
						</outline>
					<outline text="var flcancelled = false, lastidseen = undefined;"/>
					<outline text="function getTwentyTweets (sinceid, callback) {">
						<outline text="var twitter = newTwitter ();" created="Mon, 21 Apr 2014 23:21:52 GMT" pgfnum="40418"/>
						<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
							<outline text="screen_name: screenname, "/>
							<outline text="user_id: userid, " isComment="true"/>
							<outline text="trim_user: &quot;false&quot;,"/>
							<outline text="tweet_mode: &quot;extended&quot;"/>
							<outline text="};"/>
							</outline>
						<outline text="if (sinceid !== undefined) {">
							<outline text="params.max_id = sinceid;"/>
							<outline text="}"/>
							</outline>
						<outline text="newTwitter ().getTimeline (&quot;user&quot;, params, accessToken, accessTokenSecret, function (err, data, response) {">
							<outline text="if (err) {" created="Mon, 21 Apr 2014 23:12:55 GMT" pgfnum="40408">
								<outline text="console.log (&quot;getRecentTweets: err == &quot; + utils.jsonStringify (err));" created="Mon, 21 Apr 2014 23:13:06 GMT" pgfnum="40412"/>
								<outline text="callback (err);"/>
								<outline text="}" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40409"/>
								</outline>
							<outline text="else {" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40410">
								<outline text="fs.writeFile (&quot;tweets.json&quot;, utils.jsonStringify (data), function () { //for debugging" isComment="true">
									<outline text="});"/>
									</outline>
								<outline text="callback (undefined, data);"/>
								<outline text="}" created="Mon, 21 Apr 2014 23:13:00 GMT" pgfnum="40411"/>
								</outline>
							<outline text="});" created="Mon, 21 Apr 2014 23:12:34 GMT" pgfnum="40407"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function visitTwentyTweets (sinceid, callback) {">
						<outline text="getTwentyTweets (lastidseen, function (err, theTweets) {">
							<outline text="if (err) {">
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (theTweets !== undefined) {">
									<outline text="for (var i = 0; i &lt; theTweets.length; i++) {">
										<outline text="var item = theTweets [i];"/>
										<outline text="lastidseen = item.id_str;"/>
										<outline text="if (!callback (undefined, item)) {">
											<outline text="flcancelled = true;"/>
											<outline text="break;"/>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="if (!flcancelled) { //the search continues">
										<outline text="visitTwentyTweets (lastidseen, callback); //recurse"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="visitTwentyTweets (undefined, callback);"/>
					<outline text="}" created="Tue, 22 Apr 2014 02:13:58 GMT" pgfnum="40432"/>
					</outline>
				<outline text="function get24HoursOfTweets (screenname, accessToken, accessTokenSecret, callback) { //8/23/20 by DW">
					<outline text="Changes" isComment="true">
						<outline text="3/13/21; 4:56:22 PM by DW" created="Sat, 13 Mar 2021 21:56:21 GMT">
							<outline text="Copied from tweetSucker app. " created="Sat, 13 Mar 2021 21:56:22 GMT"/>
							</outline>
						<outline text="8/23/20; 10:14:25 AM by DW">
							<outline text="Starting now, get 24 hours of tweets. "/>
							</outline>
						</outline>
					<outline text="const secs24Hours = 60 * 60 * 24;"/>
					<outline text="var theTweets = new Array (), flFoundFirst = false;"/>
					<outline text="function tweetNotInArray (id) {">
						<outline text="var flnotthere = true;"/>
						<outline text="theTweets.forEach (function (item) {">
							<outline text="if (item.id_str == id) {">
								<outline text="flnotthere = false;"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="return (flnotthere);"/>
						<outline text="}"/>
						</outline>
					<outline text="getRecentTweets (screenname, accessToken, accessTokenSecret, function (err, item) {">
						<outline text="if (err) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (utils.secondsSince (item.created_at) &gt; secs24Hours) {">
								<outline text="callback (undefined, theTweets);"/>
								<outline text="return (false); //stop searching"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (tweetNotInArray (item.id_str)) { //this method returns one element twice for every batch of 20 read">
									<outline text="theTweets.push (item);"/>
									<outline text="}"/>
									</outline>
								<outline text="return (true); //keep searching"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getTweetUrl (theTweet) { //3/12/21 by DW" created="Wed, 10 Mar 2021 16:37:45 GMT">
					<outline text="try {" created="Wed, 10 Mar 2021 16:38:00 GMT">
						<outline text="return (theTweet.user.entities.url.urls [0].expanded_url);" created="Wed, 10 Mar 2021 16:38:39 GMT"/>
						<outline text="}" created="Wed, 10 Mar 2021 16:38:44 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Wed, 10 Mar 2021 16:38:45 GMT">
						<outline text="return (undefined);" created="Wed, 10 Mar 2021 16:38:49 GMT"/>
						<outline text="}" created="Wed, 10 Mar 2021 16:38:53 GMT"/>
						</outline>
					<outline text="}" created="Wed, 10 Mar 2021 16:37:53 GMT"/>
					</outline>
				<outline text="function getThread (accessToken, accessTokenSecret, idthread, flreload, callback) { //3/11/21 by DW" created="Mon, 08 Mar 2021 14:48:43 GMT">
					<outline text="Changes" isComment="true" created="Wed, 10 Mar 2021 16:23:08 GMT">
						<outline text="5/8/21; 1:24:16 PM by DW" created="Sat, 08 May 2021 17:24:16 GMT">
							<outline text="Use getInfoAboutTweet to generate the struct that describes one of the tweets in the thread." created="Sat, 08 May 2021 17:24:16 GMT"/>
							</outline>
						<outline text="3/14/21; 2:43:50 PM by DW" created="Sun, 14 Mar 2021 18:43:50 GMT">
							<outline text="New optional param, flreload. If false and we have a cached copy of the thread, return that instead of calling twitter. " created="Sun, 14 Mar 2021 18:43:51 GMT"/>
							</outline>
						<outline text="3/10/21; 11:23:11 AM by DW" created="Wed, 10 Mar 2021 16:23:10 GMT">
							<outline text="The struct we return for the thread contains data about the author, and an array of tweets. " created="Wed, 10 Mar 2021 16:23:11 GMT"/>
							</outline>
						</outline>
					<outline text="var fcache = config.cacheFolder + &quot;threads/&quot; + idthread + &quot;.json&quot;;" created="Mon, 08 Mar 2021 21:12:23 GMT"/>
					<outline text="function getThreadFromTwitter () {" created="Sun, 14 Mar 2021 19:28:24 GMT">
						<outline text="console.log (&quot;getThread: getting thread from twitter&quot;);" isComment="true" created="Sun, 14 Mar 2021 19:05:42 GMT"/>
						<outline text="getTweet (accessToken, accessTokenSecret, idthread, function (err, theTopTweet) {" created="Mon, 08 Mar 2021 15:58:54 GMT">
							<outline text="if (err) {" created="Mon, 08 Mar 2021 15:58:23 GMT">
								<outline text="callback (err);" created="Mon, 08 Mar 2021 15:58:26 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:58:30 GMT"/>
								</outline>
							<outline text="else {" created="Mon, 08 Mar 2021 15:58:31 GMT">
								<outline text="var theThread = { //this is what we return to caller" created="Wed, 10 Mar 2021 16:18:09 GMT">
									<outline text="author: {" created="Wed, 10 Mar 2021 16:18:21 GMT">
										<outline text="screenname: theTopTweet.user.screen_name," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
										<outline text="name: theTopTweet.user.name," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
										<outline text="id: theTopTweet.user.id_str," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
										<outline text="description: theTopTweet.user.description," created="Wed, 10 Mar 2021 16:20:12 GMT"/>
										<outline text="when: normalizeTimeString (theTopTweet.created_at)," isComment="true" created="Wed, 10 Mar 2021 16:36:33 GMT"/>
										<outline text="url: getTweetUrl (theTopTweet)" created="Wed, 10 Mar 2021 16:37:22 GMT"/>
										<outline text="}," created="Wed, 10 Mar 2021 16:18:31 GMT"/>
										</outline>
									<outline text="tweets: new Array ()" created="Wed, 10 Mar 2021 16:18:33 GMT"/>
									<outline text="};" created="Wed, 10 Mar 2021 16:18:16 GMT"/>
									</outline>
								<outline text="function pushTweet (theTweet) {" created="Mon, 08 Mar 2021 16:31:39 GMT">
									<outline text="theThread.tweets.push (getInfoAboutTweet (theTweet));" created="Sat, 08 May 2021 17:23:14 GMT"/>
									<outline text="theThread.tweets.push ({" isComment="true" created="Mon, 08 Mar 2021 16:28:40 GMT">
										<outline text="text: theTweet.full_text," created="Mon, 08 Mar 2021 16:28:56 GMT"/>
										<outline text="id: theTweet.id_str," created="Mon, 08 Mar 2021 16:28:58 GMT"/>
										<outline text="when: normalizeTimeString (theTweet.created_at)," created="Mon, 08 Mar 2021 16:29:06 GMT"/>
										<outline text="screenname: theTweet.user.screen_name," isComment="true" created="Tue, 09 Mar 2021 19:08:00 GMT"/>
										<outline text="parent: theTweet.in_reply_to_status_id_str" created="Mon, 08 Mar 2021 19:27:30 GMT"/>
										<outline text="});" created="Mon, 08 Mar 2021 16:28:49 GMT"/>
										</outline>
									<outline text="}" created="Mon, 08 Mar 2021 16:31:43 GMT"/>
									</outline>
								<outline text="function isInThread (theTweet) {" created="Mon, 08 Mar 2021 16:43:51 GMT">
									<outline text="var flInThread = false, idInReplyTo = theTweet.in_reply_to_status_id_str;" created="Mon, 08 Mar 2021 16:45:13 GMT"/>
									<outline text="theThread.tweets.forEach (function (item) { //return true if it's in reply to something already in thread" created="Mon, 08 Mar 2021 16:44:11 GMT">
										<outline text="if (item.id == idInReplyTo) {" created="Mon, 08 Mar 2021 16:44:45 GMT">
											<outline text="flInThread = true;" created="Mon, 08 Mar 2021 16:45:13 GMT"/>
											<outline text="}" created="Mon, 08 Mar 2021 16:45:12 GMT"/>
											</outline>
										<outline text="});" created="Mon, 08 Mar 2021 16:44:23 GMT"/>
										</outline>
									<outline text="return (flInThread);" created="Mon, 08 Mar 2021 16:45:45 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 16:44:10 GMT"/>
									</outline>
								<outline text="pushTweet (theTopTweet);" created="Mon, 08 Mar 2021 16:31:32 GMT"/>
								<outline text="get24HoursOfTweets (theTopTweet.user.screen_name, accessToken, accessTokenSecret, function (err, theTimeline) {" created="Mon, 08 Mar 2021 20:55:43 GMT">
									<outline text="if (err) {" created="Mon, 08 Mar 2021 15:58:23 GMT">
										<outline text="callback (err);" created="Mon, 08 Mar 2021 15:58:26 GMT"/>
										<outline text="}" created="Mon, 08 Mar 2021 15:58:30 GMT"/>
										</outline>
									<outline text="else {" created="Mon, 08 Mar 2021 15:58:31 GMT">
										<outline text="for (var i = theTimeline.length - 1; i &gt;= 0; i--) {" created="Mon, 08 Mar 2021 17:00:59 GMT">
											<outline text="var theTweet = theTimeline [i];" created="Mon, 08 Mar 2021 17:01:32 GMT"/>
											<outline text="if (isInThread (theTweet)) {" created="Mon, 08 Mar 2021 19:30:00 GMT">
												<outline text="pushTweet (theTweet);" created="Mon, 08 Mar 2021 16:31:32 GMT"/>
												<outline text="}" created="Mon, 08 Mar 2021 19:30:01 GMT"/>
												</outline>
											<outline text="}" created="Mon, 08 Mar 2021 17:01:31 GMT"/>
											</outline>
										<outline text="utils.sureFilePath (fcache, function () {">
											<outline text="fs.writeFile (fcache, utils.jsonStringify (theThread), function (err) { " created="Sun, 14 Mar 2021 18:46:17 GMT">
												<outline text="if (err) {" created="Sun, 14 Mar 2021 18:47:34 GMT">
													<outline text="console.log (&quot;getThread: err.message == &quot; + err.message);" created="Sun, 14 Mar 2021 18:47:37 GMT"/>
													<outline text="}" created="Sun, 14 Mar 2021 18:58:12 GMT"/>
													</outline>
												<outline text="});" created="Sun, 14 Mar 2021 18:46:52 GMT"/>
												</outline>
											<outline text="});"/>
											</outline>
										<outline text="callback (undefined, theThread);" created="Mon, 08 Mar 2021 15:58:33 GMT"/>
										<outline text="}" created="Mon, 08 Mar 2021 15:58:41 GMT"/>
										</outline>
									<outline text="});" created="Mon, 08 Mar 2021 20:58:08 GMT"/>
									</outline>
								<outline text="getTimeline (accessToken, accessTokenSecret, &quot;user_timeline&quot;, theTopTweet.user.id_str, idthread, function (err, theTimeline) {" isComment="true" created="Mon, 08 Mar 2021 20:55:43 GMT">
									<outline text="if (err) {" created="Mon, 08 Mar 2021 15:58:23 GMT">
										<outline text="callback (err);" created="Mon, 08 Mar 2021 15:58:26 GMT"/>
										<outline text="}" created="Mon, 08 Mar 2021 15:58:30 GMT"/>
										</outline>
									<outline text="else {" created="Mon, 08 Mar 2021 15:58:31 GMT">
										<outline text="for (var i = theTimeline.length - 1; i &gt;= 0; i--) {" created="Mon, 08 Mar 2021 17:00:59 GMT">
											<outline text="var theTweet = theTimeline [i];" created="Mon, 08 Mar 2021 17:01:32 GMT"/>
											<outline text="if (isInThread (theTweet)) {" created="Mon, 08 Mar 2021 19:30:00 GMT">
												<outline text="pushTweet (theTweet);" created="Mon, 08 Mar 2021 16:31:32 GMT"/>
												<outline text="}" created="Mon, 08 Mar 2021 19:30:01 GMT"/>
												</outline>
											<outline text="}" created="Mon, 08 Mar 2021 17:01:31 GMT"/>
											</outline>
										<outline text="callback (undefined, theThread);" created="Mon, 08 Mar 2021 15:58:33 GMT"/>
										<outline text="}" created="Mon, 08 Mar 2021 15:58:41 GMT"/>
										</outline>
									<outline text="});" created="Mon, 08 Mar 2021 20:58:08 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:58:41 GMT"/>
								</outline>
							<outline text="});" created="Mon, 08 Mar 2021 15:59:08 GMT"/>
							</outline>
						<outline text="}" created="Sun, 14 Mar 2021 19:28:35 GMT"/>
						</outline>
					<outline text="console.log (&quot;getThread: flreload == &quot; + flreload);" isComment="true" created="Sun, 14 Mar 2021 19:05:42 GMT"/>
					<outline text="if (flreload) { " created="Sun, 14 Mar 2021 18:49:20 GMT">
						<outline text="getThreadFromTwitter ();" created="Sun, 14 Mar 2021 19:27:25 GMT"/>
						<outline text="}" created="Sun, 14 Mar 2021 19:27:30 GMT"/>
						</outline>
					<outline text="else {" created="Sun, 14 Mar 2021 19:27:31 GMT">
						<outline text="console.log (&quot;getThread: fcache == &quot; + fcache);" isComment="true" created="Sun, 14 Mar 2021 19:05:42 GMT"/>
						<outline text="fs.readFile (fcache, function (err, jsontext) {" created="Sun, 14 Mar 2021 18:49:48 GMT">
							<outline text="if (err) {" created="Sun, 14 Mar 2021 19:26:12 GMT">
								<outline text="getThreadFromTwitter ();" created="Sun, 14 Mar 2021 19:26:42 GMT"/>
								<outline text="}" created="Sun, 14 Mar 2021 19:26:16 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 14 Mar 2021 19:26:17 GMT">
								<outline text="try {" created="Sun, 14 Mar 2021 18:50:18 GMT">
									<outline text="var theThread = JSON.parse (jsontext);" created="Sun, 14 Mar 2021 18:50:37 GMT"/>
									<outline text="callback (undefined, theThread);" created="Sun, 14 Mar 2021 18:51:37 GMT"/>
									<outline text="}" created="Sun, 14 Mar 2021 18:50:21 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Sun, 14 Mar 2021 18:50:22 GMT">
									<outline text="console.log (&quot;getThread: error reading from cache == &quot; + err.message);" created="Sun, 14 Mar 2021 19:05:42 GMT"/>
									<outline text="getThreadFromTwitter ();" created="Sun, 14 Mar 2021 19:26:42 GMT"/>
									<outline text="}" created="Sun, 14 Mar 2021 18:50:27 GMT"/>
									</outline>
								<outline text="}" created="Sun, 14 Mar 2021 19:26:19 GMT"/>
								</outline>
							<outline text="});" created="Sun, 14 Mar 2021 18:50:02 GMT"/>
							</outline>
						<outline text="}" created="Sun, 14 Mar 2021 19:27:33 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 14:48:54 GMT"/>
					</outline>
				<outline text="" created="Wed, 05 May 2021 15:41:04 GMT"/>
				<outline text="" created="Wed, 05 May 2021 15:41:04 GMT"/>
				<outline text="function getInfoAboutList (rawDataObject) { //so there's consistency in info we return about lists -- 5/7/21 by DW" created="Fri, 07 May 2021 16:10:34 GMT">
					<outline text="Changes" isComment="true" created="Fri, 07 May 2021 16:11:20 GMT">
						<outline text="5/8/21; 11:36:28 AM by DW" created="Sat, 08 May 2021 15:36:27 GMT">
							<outline text="Added description, since it is one of the things we can change through the API." created="Sat, 08 May 2021 15:36:28 GMT"/>
							</outline>
						<outline text="5/7/21; 12:11:55 PM by DW" created="Fri, 07 May 2021 16:11:54 GMT">
							<outline text="Here's what's in xxx:" created="Fri, 07 May 2021 16:11:56 GMT">
								<outline text="{">
									<outline text="&quot;id&quot;: 1389951899424678000,"/>
									<outline text="&quot;id_str&quot;: &quot;1389951899424677888&quot;,"/>
									<outline text="&quot;name&quot;: &quot;\&quot;Art Show\&quot; feeds&quot;,"/>
									<outline text="&quot;uri&quot;: &quot;/davewiner/lists/art-show-feeds-92855&quot;,"/>
									<outline text="&quot;subscriber_count&quot;: 10,"/>
									<outline text="&quot;member_count&quot;: 37,"/>
									<outline text="&quot;mode&quot;: &quot;public&quot;,"/>
									<outline text="&quot;description&quot;: &quot;The Twitter feeds that flow into artshow.scripting.com.&quot;,"/>
									<outline text="&quot;slug&quot;: &quot;art-show-feeds-92855&quot;,"/>
									<outline text="&quot;full_name&quot;: &quot;@davewiner/art-show-feeds-92855&quot;,"/>
									<outline text="&quot;created_at&quot;: &quot;Wed May 05 14:35:31 +0000 2021&quot;,"/>
									<outline text="&quot;following&quot;: true,"/>
									<outline text="&quot;user&quot;: {">
										<outline text="&quot;id&quot;: 3839,"/>
										<outline text="&quot;id_str&quot;: &quot;3839&quot;,"/>
										<outline text="&quot;name&quot;: &quot;Dave Winer&quot;,"/>
										<outline text="&quot;screen_name&quot;: &quot;davewiner&quot;,"/>
										<outline text="&quot;location&quot;: &quot;Woodstock, NY&quot;,"/>
										<outline text="&quot;description&quot;: &quot;On the net since mid-70s. Started two Silicon Valley companies. Wrote for Wired. Fellow at Harvard, NYU. Founder of podcasting, blogging, RSS. Open web.&quot;,"/>
										<outline text="&quot;url&quot;: &quot;https://t.co/ztgzDGiyOj&quot;,"/>
										<outline text="&quot;entities&quot;: {">
											<outline text="&quot;url&quot;: {">
												<outline text="&quot;urls&quot;: [">
													<outline text="{">
														<outline text="&quot;url&quot;: &quot;https://t.co/ztgzDGiyOj&quot;,"/>
														<outline text="&quot;expanded_url&quot;: &quot;http://scripting.com/&quot;,"/>
														<outline text="&quot;display_url&quot;: &quot;scripting.com&quot;,"/>
														<outline text="&quot;indices&quot;: [">
															<outline text="0,"/>
															<outline text="23"/>
															</outline>
														<outline text="]"/>
														</outline>
													<outline text="}"/>
													</outline>
												<outline text="]"/>
												</outline>
											<outline text="},"/>
											<outline text="&quot;description&quot;: {">
												<outline text="&quot;urls&quot;: []"/>
												</outline>
											<outline text="}"/>
											</outline>
										<outline text="},"/>
										<outline text="&quot;protected&quot;: false,"/>
										<outline text="&quot;followers_count&quot;: 67373,"/>
										<outline text="&quot;friends_count&quot;: 3875,"/>
										<outline text="&quot;listed_count&quot;: 5289,"/>
										<outline text="&quot;created_at&quot;: &quot;Sat Aug 05 23:04:08 +0000 2006&quot;,"/>
										<outline text="&quot;favourites_count&quot;: 17586,"/>
										<outline text="&quot;utc_offset&quot;: null,"/>
										<outline text="&quot;time_zone&quot;: null,"/>
										<outline text="&quot;geo_enabled&quot;: true,"/>
										<outline text="&quot;verified&quot;: true,"/>
										<outline text="&quot;statuses_count&quot;: 191798,"/>
										<outline text="&quot;lang&quot;: null,"/>
										<outline text="&quot;contributors_enabled&quot;: false,"/>
										<outline text="&quot;is_translator&quot;: false,"/>
										<outline text="&quot;is_translation_enabled&quot;: false,"/>
										<outline text="&quot;profile_background_color&quot;: &quot;9AE4E8&quot;,"/>
										<outline text="&quot;profile_background_image_url&quot;: &quot;http://abs.twimg.com/images/themes/theme1/bg.png&quot;,"/>
										<outline text="&quot;profile_background_image_url_https&quot;: &quot;https://abs.twimg.com/images/themes/theme1/bg.png&quot;,"/>
										<outline text="&quot;profile_background_tile&quot;: true,"/>
										<outline text="&quot;profile_image_url&quot;: &quot;http://pbs.twimg.com/profile_images/1325163719400153089/eW6KCGsY_normal.png&quot;,"/>
										<outline text="&quot;profile_image_url_https&quot;: &quot;https://pbs.twimg.com/profile_images/1325163719400153089/eW6KCGsY_normal.png&quot;,"/>
										<outline text="&quot;profile_banner_url&quot;: &quot;https://pbs.twimg.com/profile_banners/3839/1616275541&quot;,"/>
										<outline text="&quot;profile_link_color&quot;: &quot;7F7F90&quot;,"/>
										<outline text="&quot;profile_sidebar_border_color&quot;: &quot;FFFFFF&quot;,"/>
										<outline text="&quot;profile_sidebar_fill_color&quot;: &quot;E1E1DF&quot;,"/>
										<outline text="&quot;profile_text_color&quot;: &quot;000000&quot;,"/>
										<outline text="&quot;profile_use_background_image&quot;: true,"/>
										<outline text="&quot;has_extended_profile&quot;: false,"/>
										<outline text="&quot;default_profile&quot;: false,"/>
										<outline text="&quot;default_profile_image&quot;: false,"/>
										<outline text="&quot;following&quot;: false,"/>
										<outline text="&quot;follow_request_sent&quot;: false,"/>
										<outline text="&quot;notifications&quot;: false,"/>
										<outline text="&quot;translator_type&quot;: &quot;none&quot;,"/>
										<outline text="&quot;withheld_in_countries&quot;: []"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								</outline>
							</outline>
						</outline>
					<outline text="var returnedStruct = {" created="Wed, 05 May 2021 16:00:30 GMT">
						<outline text="name: rawDataObject.name," created="Fri, 07 May 2021 14:56:31 GMT"/>
						<outline text="link: &quot;https://twitter.com&quot; + rawDataObject.uri," created="Fri, 07 May 2021 14:55:56 GMT"/>
						<outline text="description: rawDataObject.description," created="Fri, 07 May 2021 14:55:56 GMT"/>
						<outline text="id: rawDataObject.id_str," created="Fri, 07 May 2021 14:55:56 GMT"/>
						<outline text="screenname: rawDataObject.user.screen_name," created="Fri, 07 May 2021 14:58:22 GMT"/>
						<outline text="whenCreated: rawDataObject.created_at," created="Fri, 07 May 2021 14:57:04 GMT"/>
						<outline text="ctMembers: rawDataObject.member_count," created="Fri, 07 May 2021 14:57:04 GMT"/>
						<outline text="flPrivate: rawDataObject.mode != &quot;public&quot;" created="Fri, 07 May 2021 16:14:42 GMT"/>
						<outline text="};" created="Fri, 07 May 2021 16:09:31 GMT"/>
						</outline>
					<outline text="return (returnedStruct);" created="Fri, 07 May 2021 16:11:21 GMT"/>
					<outline text="}" created="Fri, 07 May 2021 16:10:47 GMT"/>
					</outline>
				<outline text="function getUserLists (accessToken, accessTokenSecret, screenname, callback) { //5/5/21 by DW" created="Wed, 05 May 2021 15:41:04 GMT">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="screen_name: screenname" created="Fri, 07 May 2021 15:22:12 GMT"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="newTwitter ().lists (&quot;list&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="let listOfLists = new Array;" created="Fri, 07 May 2021 14:54:23 GMT"/>
							<outline text="data.forEach (function (item) {" created="Fri, 07 May 2021 14:54:56 GMT">
								<outline text="listOfLists.push (getInfoAboutList (item));" created="Fri, 07 May 2021 14:55:32 GMT"/>
								<outline text="});" created="Fri, 07 May 2021 14:55:04 GMT"/>
								</outline>
							<outline text="callback (undefined, listOfLists);" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 May 2021 15:41:23 GMT"/>
					</outline>
				<outline text="function getListMembers (accessToken, accessTokenSecret, listid, callback) { //5/5/21 by DW" created="Wed, 05 May 2021 15:41:04 GMT">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="list_id: listid, " created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="count: 5000" created="Wed, 05 May 2021 15:58:51 GMT"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="newTwitter ().lists (&quot;members&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="var returnedArray = new Array ();" created="Wed, 05 May 2021 16:00:30 GMT"/>
							<outline text="data.users.forEach (function (item) {" created="Wed, 05 May 2021 16:00:30 GMT">
								<outline text="returnedArray.push (item.screen_name);" created="Wed, 05 May 2021 16:01:11 GMT"/>
								<outline text="});" created="Wed, 05 May 2021 16:00:47 GMT"/>
								</outline>
							<outline text="callback (undefined, returnedArray);" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 May 2021 15:41:23 GMT"/>
					</outline>
				<outline text="function getListInfo (accessToken, accessTokenSecret, listid, callback) { //5/7/21 by DW" created="Wed, 05 May 2021 15:41:04 GMT">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="list_id: listid" created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="newTwitter ().lists (&quot;show&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="callback (undefined, getInfoAboutList (data));" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 May 2021 15:41:23 GMT"/>
					</outline>
				<outline text="function addMemberToList (accessToken, accessTokenSecret, listid, screenname, callback) { //5/7/21 by DW" created="Wed, 05 May 2021 15:41:04 GMT">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="list_id: listid," created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="screen_name: screenname" created="Fri, 07 May 2021 15:22:12 GMT"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="newTwitter ().lists (&quot;members/create&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="callback (undefined, getInfoAboutList (data));" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 May 2021 15:41:23 GMT"/>
					</outline>
				<outline text="function addGroupToList (accessToken, accessTokenSecret, listid, listOfScreennames, callback) { //5/7/21 by DW" created="Wed, 05 May 2021 15:41:04 GMT">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="list_id: listid," created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="screen_name: listOfScreennames" created="Fri, 07 May 2021 15:22:12 GMT"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="console.log (&quot;addGroupToList: params == &quot; + utils.jsonStringify (params));" created="Fri, 07 May 2021 17:13:49 GMT"/>
					<outline text="newTwitter ().lists (&quot;members/create_all&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="callback (undefined, getInfoAboutList (data));" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 May 2021 15:41:23 GMT"/>
					</outline>
				<outline text="function removeUserFromList (accessToken, accessTokenSecret, listid, screenname, callback) { //5/7/21 by DW" created="Wed, 05 May 2021 15:41:04 GMT">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="list_id: listid," created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="screen_name: screenname" created="Fri, 07 May 2021 15:22:12 GMT"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="newTwitter ().lists (&quot;members/destroy&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="callback (undefined, getInfoAboutList (data));" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 May 2021 15:41:23 GMT"/>
					</outline>
				<outline text="function removeGroupFromList (accessToken, accessTokenSecret, listid, listOfScreennames, callback) { //5/7/21 by DW" created="Wed, 05 May 2021 15:41:04 GMT">
					<outline text="var params = {" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422">
						<outline text="list_id: listid," created="Tue, 16 Feb 2021 16:31:45 GMT"/>
						<outline text="screen_name: listOfScreennames" created="Fri, 07 May 2021 15:22:12 GMT"/>
						<outline text="};" created="Tue, 16 Feb 2021 16:31:54 GMT"/>
						</outline>
					<outline text="console.log (&quot;addGroupToList: params == &quot; + utils.jsonStringify (params));" isComment="true" created="Fri, 07 May 2021 17:13:49 GMT"/>
					<outline text="newTwitter ().lists (&quot;members/create_all&quot;, params, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="callback (undefined, getInfoAboutList (data));" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 May 2021 15:41:23 GMT"/>
					</outline>
				<outline text="function updateListInfo (accessToken, accessTokenSecret, listid, jsontext, callback) { //5/7/21 by DW" created="Fri, 07 May 2021 19:54:53 GMT">
					<outline text="var theInfo;" created="Fri, 07 May 2021 20:02:38 GMT"/>
					<outline text="try {" created="Fri, 07 May 2021 20:02:21 GMT">
						<outline text="theInfo = JSON.parse (jsontext);" created="Fri, 07 May 2021 20:02:09 GMT"/>
						<outline text="}" created="Fri, 07 May 2021 20:02:23 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Fri, 07 May 2021 20:02:24 GMT">
						<outline text="callback (err);" created="Fri, 07 May 2021 20:02:45 GMT"/>
						<outline text="return;" created="Fri, 07 May 2021 20:02:55 GMT"/>
						<outline text="}" created="Fri, 07 May 2021 20:02:28 GMT"/>
						</outline>
					<outline text="theInfo.list_id = listid;" created="Fri, 07 May 2021 19:55:49 GMT"/>
					<outline text="theInfo.mode = (utils.getBoolean (theInfo.flPrivate)) ? &quot;private&quot; : &quot;public&quot;;" created="Fri, 07 May 2021 20:08:22 GMT"/>
					<outline text="if (theInfo.flPrivate !== undefined) {" created="Fri, 07 May 2021 20:09:58 GMT">
						<outline text="delete theInfo.flPrivate;" created="Fri, 07 May 2021 20:10:04 GMT"/>
						<outline text="}" created="Fri, 07 May 2021 20:10:07 GMT"/>
						</outline>
					<outline text="console.log (&quot;updateListInfo: theInfo = &quot; + utils.jsonStringify (theInfo));" created="Fri, 07 May 2021 19:58:08 GMT"/>
					<outline text="newTwitter ().lists (&quot;update&quot;, theInfo, accessToken, accessTokenSecret, function (err, data) {">
						<outline text="if (err) {" created="Thu, 18 Mar 2021 17:54:32 GMT">
							<outline text="callback (getTheTwitterError (err));" created="Thu, 18 Mar 2021 17:54:43 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:35 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 18 Mar 2021 17:54:36 GMT">
							<outline text="callback (undefined, getInfoAboutList (data));" created="Thu, 18 Mar 2021 17:54:57 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 17:54:37 GMT"/>
							</outline>
						<outline text="});" created="Thu, 18 Mar 2021 17:54:28 GMT"/>
						</outline>
					<outline text="}" created="Fri, 07 May 2021 19:55:24 GMT"/>
					</outline>
				<outline text="" created="Wed, 05 May 2021 15:41:05 GMT"/>
				<outline text=""/>
				<outline text="function handleRequest (theRequest) {">
					<outline text="Changes" isComment="true" created="Thu, 18 Mar 2021 21:30:01 GMT">
						<outline text="3/18/21; 5:30:04 PM by DW" created="Thu, 18 Mar 2021 21:30:03 GMT">
							<outline text="We've made a bit of a mess around screenname parameters. " created="Thu, 18 Mar 2021 21:30:05 GMT"/>
							<outline text="I want prefer &quot;screenname&quot;, but we'll accept screen_name too." created="Thu, 18 Mar 2021 21:30:17 GMT"/>
							</outline>
						</outline>
					<outline text="var params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="" created="Thu, 18 Mar 2021 21:29:07 GMT"/>
					<outline text="var screenname = params.screen_name; //3/18/21 by DW -- we prefer screenname, but will also accept other forms" created="Thu, 18 Mar 2021 21:29:08 GMT"/>
					<outline text="if (screenname === undefined) {" created="Thu, 18 Mar 2021 21:29:35 GMT">
						<outline text="screenname = params.screenName;" created="Thu, 18 Mar 2021 21:29:49 GMT"/>
						<outline text="if (screenname === undefined) {" created="Thu, 18 Mar 2021 21:29:35 GMT">
							<outline text="screenname = params.screenname;" created="Thu, 18 Mar 2021 21:29:49 GMT"/>
							<outline text="}" created="Thu, 18 Mar 2021 21:29:43 GMT"/>
							</outline>
						<outline text="}" created="Thu, 18 Mar 2021 21:29:43 GMT"/>
						</outline>
					<outline text="" created="Thu, 18 Mar 2021 21:29:08 GMT"/>
					<outline text="function errorResponse (errorval) {" isComment="true">
						<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, errorval);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="console.log (&quot;returnData: jstruct == &quot; + utils.jsonStringify (jstruct));" isComment="true"/>
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="console.log (&quot;returnError: jstruct == &quot; + utils.jsonStringify (jstruct));"/>
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function httpTwitterReturn (err, jstruct) { //3/20/21 by DW">
						<outline text="if (err) {">
							<outline text="returnError (getTheTwitterError (err));"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="console.log (&quot;davetwitter: theRequest.lowerpath == &quot; + theRequest.lowerpath);" isComment="true"/>
					<outline text="if (!config.httpRequestCallback (theRequest)) { //it wasn't handled by the higher level code">
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/now&quot;: " isComment="true" created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
								<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ());"/>
								<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
								</outline>
							<outline text="case &quot;/connect&quot;: " created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
								<outline text="var urlCallback = &quot;http://&quot; + config.myDomain + &quot;/callbackFromTwitter?redirectUrl=&quot; + encodeURIComponent (theRequest.params.redirect_url);"/>
								<outline text="var twitter = new twitterAPI ({">
									<outline text="consumerKey: config.twitterConsumerKey,"/>
									<outline text="consumerSecret: config.twitterConsumerSecret,"/>
									<outline text="callback: urlCallback"/>
									<outline text="});"/>
									</outline>
								<outline text="console.log (&quot;davetwitter/handleRequest: urlCallback == &quot; + urlCallback); //4/19/19 by DW"/>
								<outline text="twitter.getRequestToken (function (error, requestToken, requestTokenSecret, results) {">
									<outline text="if (error) {">
										<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, error.data);"/>
										<outline text="}" created="Mon, 21 Apr 2014 13:53:42 GMT" pgfnum="40310"/>
										</outline>
									<outline text="else {">
										<outline text="saveRequestToken (requestToken, requestTokenSecret);" created="Mon, 21 Apr 2014 16:43:56 GMT" pgfnum="40371"/>
										<outline text="" created="Mon, 21 Apr 2014 16:16:45 GMT" pgfnum="40357"/>
										<outline text="var twitterOauthUrl = &quot;https://twitter.com/oauth/authenticate?oauth_token=&quot; + requestToken;" created="Mon, 21 Apr 2014 14:18:10 GMT" pgfnum="40322"/>
										<outline text="if (config.flForceTwitterLogin) { //2/19/16 by DW">
											<outline text="twitterOauthUrl += &quot;&amp;force_login=true&quot;; //https://dev.twitter.com/oauth/reference/get/oauth/authenticate"/>
											<outline text="}"/>
											</outline>
										<outline text="theRequest.sysResponse.writeHead (302, {&quot;location&quot;: twitterOauthUrl});"/>
										<outline text="theRequest.sysResponse.end (&quot;302 REDIRECT&quot;);    "/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
								</outline>
							<outline text="case &quot;/disconnect&quot;: //3/24/19 by DW">
								<outline text="var token = theRequest.params.oauth_token;" isComment="true" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="var tokenSecret = theRequest.params.oauth_token_secret;" isComment="true" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="deleteInScreenNameCache (token, secret, function (data) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
									<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (data));"/>
									<outline text="});"/>
									</outline>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/callbackfromtwitter&quot;:" created="Mon, 21 Apr 2014 14:25:08 GMT" pgfnum="40323">
								<outline text="we're being called back from twitter -- like this: " isComment="true" created="Mon, 21 Apr 2014 15:14:29 GMT" pgfnum="40348">
									<outline text="http://fargotwitter.herokuapp.com/callbackFromTwitter?oauth_token=ohZDtFHu8T2siB59GbPCwhJTbS1sCOjv2EBvZJVvk&amp;oauth_verifier=Ne8EUrsuIPMfbta5PnaAvIv61sgoawlODlO8Uzob1kY" isComment="true" created="Mon, 21 Apr 2014 14:25:54 GMT" pgfnum="40325"/>
									<outline text="http://fargotwitter.herokuapp.com/callbackFromTwitter?redirectUrl=portnoy&amp;oauth_token=LyndS2n9zMCIxwMszwWapgJSm6N9bl6tT1CXJ9UlsE&amp;oauth_verifier=2QWyUZoHO0Bw0ck0DHzSYEFZmgbbrLSoVDjbwtZ5yg"/>
									</outline>
								<outline text="" created="Mon, 21 Apr 2014 16:29:14 GMT" pgfnum="40358"/>
								<outline text="var twitter = new twitterAPI ({">
									<outline text="consumerKey: config.twitterConsumerKey,"/>
									<outline text="consumerSecret: config.twitterConsumerSecret,"/>
									<outline text="callback: undefined" created="Mon, 21 Apr 2014 16:29:45 GMT" pgfnum="40363"/>
									<outline text="});"/>
									</outline>
								<outline text="" created="Mon, 21 Apr 2014 16:46:02 GMT" pgfnum="40372"/>
								<outline text="var myRequestToken = theRequest.params.oauth_token;" created="Mon, 21 Apr 2014 16:46:03 GMT" pgfnum="40373"/>
								<outline text="var myTokenSecret = findRequestToken (myRequestToken);" created="Mon, 21 Apr 2014 16:46:14 GMT" pgfnum="40374"/>
								<outline text="" created="Mon, 21 Apr 2014 16:55:13 GMT" pgfnum="40376"/>
								<outline text="console.log (&quot;myRequestToken == &quot; + myRequestToken + &quot;, myTokenSecret == &quot; + myTokenSecret + &quot;.&quot;);" isComment="true" created="Mon, 21 Apr 2014 13:55:41 GMT" pgfnum="40316"/>
								<outline text="" created="Mon, 21 Apr 2014 16:29:15 GMT" pgfnum="40362"/>
								<outline text="twitter.getAccessToken (myRequestToken, myTokenSecret, theRequest.params.oauth_verifier, function (error, accessToken, accessTokenSecret, results) {">
									<outline text="if (error) {">
										<outline text="console.log (&quot;twitter.getAccessToken: error == &quot; + error.message);"/>
										<outline text="}" created="Mon, 21 Apr 2014 15:12:29 GMT" pgfnum="40347"/>
										</outline>
									<outline text="else {" created="Mon, 21 Apr 2014 15:12:16 GMT" pgfnum="40346">
										<outline text="var url = theRequest.params.redirectUrl + &quot;?oauth_token=&quot; + encodeURIComponent (accessToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (accessTokenSecret) + &quot;&amp;user_id=&quot; + encodeURIComponent (results.user_id) + &quot;&amp;screen_name=&quot; + encodeURIComponent (results.screen_name);" created="Mon, 21 Apr 2014 20:11:35 GMT" pgfnum="40386"/>
										<outline text="" created="Mon, 21 Apr 2014 20:13:19 GMT" pgfnum="40387"/>
										<outline text="theRequest.sysResponse.writeHead (302, {&quot;location&quot;: url});"/>
										<outline text="theRequest.sysResponse.end (&quot;302 REDIRECT&quot;);    "/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
								</outline>
							<outline text="case &quot;/configuration&quot;: " created="Tue, 06 May 2014 19:51:53 GMT" pgfnum="41199">
								<outline text="getConfiguration (token, secret, httpTwitterReturn);" created="Sat, 20 Mar 2021 16:11:37 GMT"/>
								<outline text="old code" isComment="true" created="Sat, 20 Mar 2021 16:11:38 GMT">
									<outline text="console.log (&quot;davetwitter: getting configuration.&quot;);" isComment="true"/>
									<outline text="var twitter = newTwitter ();" created="Mon, 21 Apr 2014 23:21:52 GMT" pgfnum="40418"/>
									<outline text="var params = {};" created="Tue, 22 Apr 2014 02:02:04 GMT" pgfnum="40422"/>
									<outline text="var accessToken = theRequest.params.oauth_token;" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
									<outline text="var accessTokenSecret = theRequest.params.oauth_token_secret;" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
									<outline text="twitter.help (&quot;configuration&quot;, params, accessToken, accessTokenSecret, function (err, data, response) {" created="Tue, 06 May 2014 19:53:05 GMT" pgfnum="41204">
										<outline text="if (err) {" created="Mon, 21 Apr 2014 23:12:55 GMT" pgfnum="40408">
											<outline text="returnError (err);"/>
											<outline text="}" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40409"/>
											</outline>
										<outline text="else {" created="Mon, 21 Apr 2014 23:12:58 GMT" pgfnum="40410">
											<outline text="returnData (data);"/>
											<outline text="}" created="Mon, 21 Apr 2014 23:13:00 GMT" pgfnum="40411"/>
											</outline>
										<outline text="});" created="Mon, 21 Apr 2014 23:12:34 GMT" pgfnum="40407"/>
										</outline>
									</outline>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getuserprofile&quot;: case &quot;/getuserinfo&quot;:" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
								<outline text="getUserInfo (token, secret, screenname, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
								<outline text="return;" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
								</outline>
							<outline text="case &quot;/getuserinfoforverb&quot;: //5/8/21 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
								<outline text="getUserInfoForVerb (token, secret, screenname, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
								<outline text="return;" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
								</outline>
							<outline text="case &quot;/getuserprofile&quot;: case &quot;/getuserinfo&quot;:" isComment="true" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
								<outline text="getUserInfo (token, secret, screenname, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
								<outline text="return;" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
								</outline>
							<outline text="case &quot;/derefurl&quot;: //11/19/17 by DW" created="Thu, 31 Jul 2014 16:34:56 GMT" pgfnum="43058">
								<outline text="var shortUrl = theRequest.params.url;" created="Mon, 21 Apr 2014 23:15:16 GMT" pgfnum="40413"/>
								<outline text="getScreenName (token, secret, function (screenName) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
									<outline text="if (screenName === undefined) {" created="Thu, 10 Jul 2014 00:53:00 GMT" pgfnum="42793">
										<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, &quot;Can't get the deref the URL because the accessToken is not valid.&quot;);"/>
										<outline text="}" created="Thu, 10 Jul 2014 00:53:11 GMT" pgfnum="42797"/>
										</outline>
									<outline text="else {" created="Thu, 10 Jul 2014 00:53:12 GMT" pgfnum="42798">
										<outline text="var myRequest = {" created="Thu, 31 Jul 2014 16:39:00 GMT" pgfnum="43066">
											<outline text="method: &quot;HEAD&quot;, " created="Thu, 31 Jul 2014 16:39:06 GMT" pgfnum="43067"/>
											<outline text="url: shortUrl, " created="Thu, 31 Jul 2014 16:39:22 GMT" pgfnum="43070"/>
											<outline text="followAllRedirects: true" created="Thu, 31 Jul 2014 16:39:18 GMT" pgfnum="43069"/>
											<outline text="};" created="Thu, 31 Jul 2014 16:39:13 GMT" pgfnum="43068"/>
											</outline>
										<outline text="request (myRequest, function (error, response) {">
											<outline text="if (error) {" created="Thu, 31 Jul 2014 16:39:35 GMT" pgfnum="43071">
												<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, &quot;Can't get the deref the URL because there was an error making the HTTP request.&quot;);"/>
												<outline text="}" created="Thu, 31 Jul 2014 16:39:38 GMT" pgfnum="43072"/>
												</outline>
											<outline text="else {" created="Thu, 31 Jul 2014 16:39:39 GMT" pgfnum="43073">
												<outline text="var myResponse = {" created="Thu, 31 Jul 2014 16:40:49 GMT" pgfnum="43075">
													<outline text="url: shortUrl," created="Thu, 31 Jul 2014 16:41:19 GMT" pgfnum="43078"/>
													<outline text="longurl: response.request.href" created="Thu, 31 Jul 2014 16:41:06 GMT" pgfnum="43077"/>
													<outline text="};" created="Thu, 31 Jul 2014 16:40:55 GMT" pgfnum="43076"/>
													</outline>
												<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (myResponse));"/>
												<outline text="}" created="Thu, 31 Jul 2014 16:39:41 GMT" pgfnum="43074"/>
												</outline>
											<outline text="});"/>
											</outline>
										<outline text="}" created="Thu, 10 Jul 2014 00:53:14 GMT" pgfnum="42799"/>
										</outline>
									<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
									</outline>
								<outline text="return;" created="Thu, 31 Jul 2014 17:01:59 GMT" pgfnum="43084"/>
								</outline>
							<outline text="case &quot;/getembedcode&quot;: //11/10/18 by DW" created="Fri, 20 Jun 2014 17:54:12 GMT" pgfnum="42277">
								<outline text="//https://dev.twitter.com/docs/api/1/get/statuses/oembed" created="Fri, 20 Jun 2014 23:08:14 GMT" pgfnum="42337"/>
								<outline text="" created="Fri, 20 Jun 2014 23:08:17 GMT" pgfnum="42338"/>
								<outline text="var url = &quot;https://api.twitter.com/1/statuses/oembed.json?id=&quot; + theRequest.params.id;" created="Fri, 20 Jun 2014 18:09:00 GMT" pgfnum="42291"/>
								<outline text="" created="Fri, 20 Jun 2014 23:01:58 GMT" pgfnum="42325"/>
								<outline text="function addParam (name) {" created="Fri, 20 Jun 2014 23:01:58 GMT" pgfnum="42326">
									<outline text="if (theRequest.params [name] !== undefined) {" created="Fri, 20 Jun 2014 23:02:46 GMT" pgfnum="42333">
										<outline text="url += &quot;&amp;&quot; + name + &quot;=&quot; + theRequest.params [name];" created="Fri, 20 Jun 2014 23:03:08 GMT" pgfnum="42336"/>
										<outline text="}" created="Fri, 20 Jun 2014 23:02:57 GMT" pgfnum="42335"/>
										</outline>
									<outline text="}" created="Fri, 20 Jun 2014 23:02:34 GMT" pgfnum="42330"/>
									</outline>
								<outline text="addParam (&quot;maxwidth&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;hide_media&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;hide_thread&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;omit_script&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;align&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;related&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="addParam (&quot;lang&quot;);" created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331"/>
								<outline text="" created="Fri, 20 Jun 2014 23:01:59 GMT" pgfnum="42329"/>
								<outline text="request (url, function (error, response, body) {">
									<outline text="if (!error &amp;&amp; (response.statusCode == 200)) {">
										<outline text="httpResponse.writeHead (200, {&quot;Content-Type&quot;: &quot;text/plain&quot;, &quot;Access-Control-Allow-Origin&quot;: &quot;*&quot;});" isComment="true"/>
										<outline text="httpResponse.end (body);    " isComment="true"/>
										<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, body);"/>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Fri, 20 Jun 2014 18:10:50 GMT" pgfnum="42293">
										<outline text="theRequest.httpReturn (500, &quot;text/plain&quot;, utils.jsonStringify (error));"/>
										<outline text="}" created="Fri, 20 Jun 2014 18:10:52 GMT" pgfnum="42294"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="return;" created="Fri, 20 Jun 2014 17:54:25 GMT" pgfnum="42278"/>
								</outline>
							<outline text="case &quot;/tweet&quot;: //12/14/18 by DW" created="Tue, 22 Apr 2014 02:26:28 GMT" pgfnum="40441">
								<outline text="sendTweet (token, secret, params.status, params.in_reply_to_status_id, httpReturn);"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/sendtweetforverb&quot;: //5/8/21 by DW" created="Tue, 22 Apr 2014 02:26:28 GMT" pgfnum="40441">
								<outline text="sendTweetForVerb (token, secret, params.status, params.in_reply_to_status_id, httpReturn);"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getmymentions&quot;: //2/11/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getTimeline (token, secret, &quot;mentions&quot;, params.user_id, params.since_id, httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/gettimeline&quot;: " created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getTimelineForHttp (token, secret, params, httpReturn);"/>
								<outline text="getTimeline (token, secret, params.whichtimeline, params.user_id, params.since_id, httpReturn)" isComment="true"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/gettweet&quot;: //3/8/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getTweet (token, secret, params.id, httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/gettweetforverb&quot;: //5/8/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getTweetForVerb (token, secret, params.id, httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getthread&quot;: //3/12/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getThread (token, secret, params.id, utils.getBoolean (params.reload), httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getfollowers&quot;: //3/17/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getFollowers (token, secret, params.screen_name, httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getfollowed&quot;: //3/17/21 by DW -- people the indicated user follows" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getFollowed (token, secret, params.screen_name, httpReturn)"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getsupportedlanguages&quot;: //3/20/21 by DW" created="Tue, 06 May 2014 19:51:53 GMT" pgfnum="41199">
								<outline text="getSupportedLanguages (token, secret, httpTwitterReturn);" created="Sat, 20 Mar 2021 16:11:37 GMT"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getmyscreenname&quot;:">
								<outline text="getScreenName (token, secret, function (screenName) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
									<outline text="var obj = {">
										<outline text="screenName: screenName"/>
										<outline text="};"/>
										</outline>
									<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (obj));"/>
									<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
									</outline>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/getaccountsettings&quot;: //3/18/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getAccountSettings (token, secret, httpReturn);" created="Thu, 18 Mar 2021 21:16:26 GMT"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/setaccountsettings&quot;: //3/20/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="var theSettings;" created="Sat, 20 Mar 2021 14:56:50 GMT"/>
								<outline text="try {" created="Sat, 20 Mar 2021 14:56:20 GMT">
									<outline text="theSettings = JSON.parse (params.settings);" created="Sat, 20 Mar 2021 14:56:20 GMT"/>
									<outline text="}" created="Sat, 20 Mar 2021 14:56:34 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Sat, 20 Mar 2021 14:56:35 GMT">
									<outline text="returnError (err);" created="Sat, 20 Mar 2021 14:57:08 GMT"/>
									<outline text="}" created="Sat, 20 Mar 2021 14:56:38 GMT"/>
									</outline>
								<outline text="setAccountSettings (token, secret, theSettings, httpReturn);" created="Thu, 18 Mar 2021 21:16:26 GMT"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getratelimitstatus&quot;: //3/20/21 by DW" created="Tue, 22 Apr 2014 02:12:48 GMT" pgfnum="40429">
								<outline text="getRateLimitStatus (token, secret, params.resources, httpTwitterReturn);" created="Thu, 18 Mar 2021 21:16:26 GMT"/>
								<outline text="return;" created="Tue, 22 Apr 2014 02:26:34 GMT" pgfnum="40442"/>
								</outline>
							<outline text="case &quot;/getuserinfofromuserid&quot;: //4/8/21 by DW">
								<outline text="getUserInfoFromUserId (token, secret, params.id, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/getuserlists&quot;: //5/5/21 by DW">
								<outline text="getUserLists (token, secret, params.screenname, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/getlistmembers&quot;: //5/7/21 by DW">
								<outline text="getListMembers (token, secret, params.id, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/getlistinfo&quot;: //5/7/21 by DW">
								<outline text="getListInfo (token, secret, params.id, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/addmembertolist&quot;: //5/7/21 by DW">
								<outline text="addMemberToList (token, secret, params.id, params.screenname, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/addgrouptolist&quot;: //5/7/21 by DW">
								<outline text="addGroupToList (token, secret, params.id, params.listofscreennames, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/removeuserfromlist&quot;: //5/7/21 by DW">
								<outline text="removeUserFromList (token, secret, params.id, params.screenname, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/removegroupfromlist&quot;: //5/7/21 by DW">
								<outline text="removeGroupFromList (token, secret, params.id, params.listofscreennames, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/updatelistinfo&quot;: //5/7/21 by DW">
								<outline text="updateListInfo (token, secret, params.id, params.info, httpReturn);" created="Thu, 08 Apr 2021 15:33:42 GMT"/>
								<outline text="return;"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="if (!config.http404Callback (theRequest)) { //1/24/21 by DW">
							<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 11 Mar 2021 21:49:52 GMT"/>
				<outline text="function everySecond () { //3/11/21 by DW -- for debugging" isComment="true" created="Thu, 11 Mar 2021 21:49:52 GMT">
					<outline text="console.log (&quot;everySecond: config.twitterConsumerKey == &quot; + config.twitterConsumerKey);" isComment="true" created="Thu, 11 Mar 2021 21:50:14 GMT"/>
					<outline text="}" created="Thu, 11 Mar 2021 21:50:05 GMT"/>
					</outline>
				<outline text="" isComment="true" created="Thu, 11 Mar 2021 21:49:53 GMT"/>
				<outline text="function start (configParam, callback) {">
					<outline text="Changes" isComment="true" created="Sun, 02 May 2021 13:42:30 GMT">
						<outline text="5/2/21; 9:42:33 AM by DW" created="Sun, 02 May 2021 13:42:32 GMT">
							<outline text="Maybe you want to use functions in this package but don't want to run a server. " created="Sun, 02 May 2021 13:42:34 GMT"/>
							<outline text="Set a config param named flServerEnabled to false and we'll return before starting the server." created="Sun, 02 May 2021 13:42:55 GMT"/>
							</outline>
						</outline>
					<outline text="if (configParam !== undefined) {">
						<outline text="for (x in configParam) {">
							<outline text="config [x] = configParam [x];"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="console.log (&quot;davetwitter.start: config == &quot; + utils.jsonStringify (config));"/>
					<outline text="if (config.flServerEnabled) { //5/2/21 by DW" created="Sun, 02 May 2021 13:44:05 GMT">
						<outline text="var httpConfig = {">
							<outline text="port: config.httpPort,"/>
							<outline text="flLogToConsole: config.flLogToConsole,"/>
							<outline text="flAllowAccessFromAnywhere: config.flAllowAccessFromAnywhere,"/>
							<outline text="flPostEnabled: config.flPostEnabled,"/>
							<outline text="blockedAddresses: config.blockedAddresses //4/17/18 by DW"/>
							<outline text="};"/>
							</outline>
						<outline text="davehttp.start (httpConfig, function (theRequest) {">
							<outline text="handleRequest (theRequest);"/>
							<outline text="});"/>
							</outline>
						<outline text="if (callback !== undefined) { ">
							<outline text="callback ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Sun, 02 May 2021 13:44:11 GMT"/>
						</outline>
					<outline text="else {" created="Sun, 02 May 2021 13:48:00 GMT">
						<outline text="if (callback !== undefined) { ">
							<outline text="callback ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Sun, 02 May 2021 13:48:02 GMT"/>
						</outline>
					<outline text="" created="Thu, 11 Mar 2021 21:51:23 GMT"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="readme.md">
				<outline text="# davetwitter">
					<outline text="A simple identity server that can be dropped into other server apps. "/>
					</outline>
				<outline text="### Changes">
					<outline text="#### 0.5.28 -- 3/12/21 by DW" created="Fri, 12 Mar 2021 15:49:48 GMT">
						<outline text="New calls to get one tweet, which amazingly was not part of this package until today, and a call to get a thread." created="Fri, 12 Mar 2021 15:50:06 GMT"/>
						<outline text="These are also available through the API. " created="Fri, 12 Mar 2021 15:50:30 GMT"/>
						<outline text="These features were added for the threadviewer.com app." created="Fri, 12 Mar 2021 15:50:39 GMT"/>
						</outline>
					<outline text="#### v0.5.21 -- 2/12/21 by DW" created="Fri, 12 Feb 2021 17:37:00 GMT">
						<outline text="Sorry for the missing notes." created="Fri, 12 Feb 2021 17:37:16 GMT"/>
						<outline text="Added /getmymentions call." created="Fri, 12 Feb 2021 17:37:20 GMT"/>
						</outline>
					<outline text="#### v0.5.10 -- 3/24/19 by DW">
						<outline text="There's a new HTTP call -- /disconnect. You should call it when the user signs off. It takes two params, the accessToken and accessTokenSecret for the user. It goes through the screenNameCache looking for the user, and deletes it if it's found. I've updated &lt;a href=&quot;http://feedbase.io/&quot;&gt;feedBase&lt;/a&gt; to make this call when the user signs off. "/>
						<outline text="This problem was &lt;a href=&quot;https://github.com/scripting/feedBase/issues/40&quot;&gt;reported&lt;/a&gt; by @vincode-io. Many thanks for the excellent report and follow-up."/>
						</outline>
					</outline>
				</outline>
			<outline text=""/>
			<outline text="test1/main.js">
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const davetwitter = require (&quot;davetwitter&quot;);" isComment="true"/>
				<outline text="const davetwitter = require (&quot;../davetwitter.js&quot;);"/>
				<outline text=""/>
				<outline text="var config = {">
					<outline text="twitterConsumerKey: &quot;xxx&quot;,"/>
					<outline text="twitterConsumerSecret: &quot;yyy&quot;"/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="function readConfig (f, theConfig, callback) { ">
					<outline text="Changes" isComment="true">
						<outline text="1/21/21; 12:35:00 PM by DW">
							<outline text="New param, flReportError."/>
							</outline>
						</outline>
					<outline text="fs.readFile (f, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;readConfig: err.message == &quot; + err.message);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="try {">
								<outline text="var jstruct = JSON.parse (jsontext);"/>
								<outline text="for (var x in jstruct) {">
									<outline text="theConfig [x] = jstruct [x];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="catch (err) {">
								<outline text="console.log (&quot;readConfig: err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="callback ();"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Wed, 17 Mar 2021 16:34:47 GMT"/>
				<outline text="readConfig (&quot;config.json&quot;, config, function (err) {" created="Wed, 17 Mar 2021 16:34:49 GMT">
					<outline text="config.httpPort = 1491;" created="Thu, 18 Mar 2021 19:05:34 GMT"/>
					<outline text="davetwitter.start (config, function () {">
						<outline text="davetwitter.getTweet (undefined, undefined, &quot;1372230140017569794&quot;, function (err, theTweet) {" isComment="true" created="Wed, 17 Mar 2021 16:37:42 GMT">
							<outline text="if (err) {" created="Wed, 17 Mar 2021 16:40:08 GMT">
								<outline text="console.log (&quot;err.message == &quot; + err.message);" created="Wed, 17 Mar 2021 16:40:15 GMT"/>
								<outline text="}" created="Wed, 17 Mar 2021 16:40:12 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 17 Mar 2021 16:40:13 GMT">
								<outline text="console.log (&quot;\n\n\ntheTweet.full_text == &quot; + theTweet.full_text);" created="Wed, 17 Mar 2021 16:40:15 GMT"/>
								<outline text="}" created="Wed, 17 Mar 2021 16:40:15 GMT"/>
								</outline>
							<outline text="});" created="Wed, 17 Mar 2021 16:38:06 GMT"/>
							</outline>
						<outline text="davetwitter.getFollowers (undefined, undefined, &quot;davewiner&quot;, function (err, theFollowers) {" isComment="true" created="Wed, 17 Mar 2021 16:37:42 GMT">
							<outline text="if (err) {" created="Wed, 17 Mar 2021 16:40:08 GMT">
								<outline text="console.log (&quot;err.message == &quot; + err.message);" created="Wed, 17 Mar 2021 16:40:15 GMT"/>
								<outline text="}" created="Wed, 17 Mar 2021 16:40:12 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 17 Mar 2021 16:40:13 GMT">
								<outline text="console.log (&quot;\n\n\ntheFollowers == &quot; + utils.jsonStringify (theFollowers));" created="Wed, 17 Mar 2021 16:40:15 GMT"/>
								<outline text="}" created="Wed, 17 Mar 2021 16:40:15 GMT"/>
								</outline>
							<outline text="});" created="Wed, 17 Mar 2021 16:38:06 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="});" created="Wed, 17 Mar 2021 16:35:03 GMT"/>
					</outline>
				<outline text="" created="Wed, 17 Mar 2021 16:34:49 GMT"/>
				<outline text=""/>
				</outline>
			<outline text="test1/package.json">
				<outline text="{ ">
					<outline text="&quot;name&quot;: &quot;test&quot;, "/>
					<outline text="&quot;description&quot;: &quot;test.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@smallpicture.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;davetwitter&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;"/>
						<outline text="}, "/>
						</outline>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;engines&quot;: { ">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="test1/readme.md" created="Wed, 17 Mar 2021 16:54:01 GMT">
				<outline text="# How to run the test app" created="Wed, 17 Mar 2021 16:54:26 GMT">
					<outline text="In config.json you have to provide at least twitterConsumerKey and twitterConsumerSecret. I've provided one here with obviously dummy values."/>
					<outline text="When you launch the app, main.js, this is what it does:">
						<outline text="1. reads config.json"/>
						<outline text="2. initializes davetwitter with it"/>
						<outline text="3. reads a tweet and displays its text"/>
						</outline>
					<outline text="It requires the davetwitter.js file from its parent directory (the main davetwitter file). It doesn't access the package through NPM because I wanted to make it easy to iterate over new versions wthout having to publish a new version of davetwitter. "/>
					<outline text="From there you can test anything."/>
					</outline>
				</outline>
			<outline text="test1/code.js">
				<outline text="" created="Wed, 17 Mar 2021 20:30:31 GMT"/>
				<outline text="http://localhost:1401/getfollowers?screen_name=davewiner" isComment="true" created="Wed, 17 Mar 2021 20:30:31 GMT"/>
				<outline text="" created="Wed, 17 Mar 2021 20:35:09 GMT"/>
				<outline text="const urlTwitterServer = &quot;http://localhost:1401/&quot;;" created="Wed, 17 Mar 2021 20:35:09 GMT"/>
				<outline text="" created="Wed, 17 Mar 2021 20:31:07 GMT"/>
				<outline text="" created="Wed, 17 Mar 2021 20:31:07 GMT"/>
				<outline text="function serverCall (verb, params, flAuthenticated, callback, method, postbody) {">
					<outline text="if (flAuthenticated === undefined) {">
						<outline text="flAuthenticated = true;"/>
						<outline text="}"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (method === undefined) {">
						<outline text="method = &quot;GET&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) {">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="var apiUrl = urlTwitterServer + verb;"/>
					<outline text="var paramString = twBuildParamList (params);"/>
					<outline text="if (paramString.length &gt; 0) {">
						<outline text="apiUrl += &quot;?&quot; + paramString;"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="console.log (&quot;serverCall: verb == &quot; + verb + &quot;, apiUrl == &quot; + apiUrl);"/>
					<outline text=""/>
					<outline text="$.ajax ({">
						<outline text="type: method,"/>
						<outline text="url: apiUrl,"/>
						<outline text="data: postbody, "/>
						<outline text="success: function (data) {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (undefined, data);"/>
								<outline text="}"/>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status, something, otherthing) { ">
							<outline text="console.log (&quot;serverCall: error == &quot; + JSON.stringify (status, undefined, 4));" created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848"/>
							<outline text="if (callback !== undefined) {">
								<outline text="var err = {">
									<outline text="code: status.status,"/>
									<outline text="message: JSON.parse (status.responseText).message"/>
									<outline text="};"/>
									</outline>
								<outline text="if (callback !== undefined) {">
									<outline text="callback (err);"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Wed, 17 Mar 2021 20:31:15 GMT"/>
				<outline text="function getFollowed (who, callback) { " created="Mon, 08 Mar 2021 14:48:43 GMT">
					<outline text="serverCall (&quot;getfollowed&quot;, {screen_name: who}, false, callback);" created="Mon, 08 Mar 2021 15:56:53 GMT"/>
					<outline text="}" created="Mon, 08 Mar 2021 14:48:54 GMT"/>
					</outline>
				<outline text="function testGetFollowed () {" created="Wed, 17 Mar 2021 20:32:30 GMT">
					<outline text="getFollowed (&quot;davewiner&quot;, function (err, theList) {" created="Wed, 17 Mar 2021 20:32:43 GMT">
						<outline text="if (err) {" created="Wed, 17 Mar 2021 20:33:30 GMT">
							<outline text="console.log (&quot;err.message == &quot; + err.message);" created="Wed, 17 Mar 2021 20:33:32 GMT"/>
							<outline text="}" created="Wed, 17 Mar 2021 20:33:42 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 17 Mar 2021 20:33:43 GMT">
							<outline text="console.log (&quot;theList == &quot; + jsonStringify (theList));" created="Wed, 17 Mar 2021 20:33:32 GMT"/>
							<outline text="}" created="Wed, 17 Mar 2021 20:33:45 GMT"/>
							</outline>
						<outline text="});" created="Wed, 17 Mar 2021 20:33:24 GMT"/>
						</outline>
					<outline text="}" created="Wed, 17 Mar 2021 20:32:38 GMT"/>
					</outline>
				<outline text="" created="Wed, 17 Mar 2021 20:30:31 GMT"/>
				<outline text="function getFollowers (who, callback) { " created="Mon, 08 Mar 2021 14:48:43 GMT">
					<outline text="serverCall (&quot;getfollowers&quot;, {screen_name: who}, true, callback);" created="Mon, 08 Mar 2021 15:56:53 GMT"/>
					<outline text="}" created="Mon, 08 Mar 2021 14:48:54 GMT"/>
					</outline>
				<outline text="function testGetFollowers () {" created="Wed, 17 Mar 2021 20:32:30 GMT">
					<outline text="getFollowers (&quot;davewiner&quot;, function (err, theList) {" created="Wed, 17 Mar 2021 20:32:43 GMT">
						<outline text="if (err) {" created="Wed, 17 Mar 2021 20:33:30 GMT">
							<outline text="console.log (&quot;err.message == &quot; + err.message);" created="Wed, 17 Mar 2021 20:33:32 GMT"/>
							<outline text="}" created="Wed, 17 Mar 2021 20:33:42 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 17 Mar 2021 20:33:43 GMT">
							<outline text="console.log (&quot;theList == &quot; + jsonStringify (theList));" created="Wed, 17 Mar 2021 20:33:32 GMT"/>
							<outline text="}" created="Wed, 17 Mar 2021 20:33:45 GMT"/>
							</outline>
						<outline text="});" created="Wed, 17 Mar 2021 20:33:24 GMT"/>
						</outline>
					<outline text="}" created="Wed, 17 Mar 2021 20:32:38 GMT"/>
					</outline>
				<outline text="" created="Wed, 17 Mar 2021 20:34:27 GMT"/>
				<outline text="function twGetDefaultServer () {">
					<outline text="var urlServer = &quot;http://localhost:1401/&quot;;" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="return (urlServer);"/>
					<outline text="}"/>
					</outline>
				<outline text="function twConnectToTwitter () {" created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25623">
					<outline text="var urlServer = twGetDefaultServer ();" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="function trimTrailing (s, ch) {" created="Mon, 11 Mar 2013 02:40:24 GMT" pgfnum="20129">
						<outline text="while (s.charAt (s.length - 1) == ch) {">
							<outline text="s = s.substr (0, s.length - 1);"/>
							<outline text="}" created="Thu, 24 Apr 2014 00:51:29 GMT" pgfnum="40514"/>
							</outline>
						<outline text="return (s);" created="Mon, 11 Mar 2013 02:43:18 GMT" pgfnum="20133"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:51:23 GMT" pgfnum="40513"/>
						</outline>
					<outline text="var s = trimTrailing (window.location.href, &quot;#&quot;);" created="Thu, 13 Jun 2013 23:16:23 GMT" pgfnum="26128"/>
					<outline text="var urlRedirectTo = urlServer + &quot;connect?redirect_url=&quot; + encodeURIComponent (s);" created="Mon, 28 Apr 2014 12:43:45 GMT" pgfnum="40579"/>
					<outline text="window.location.href = urlRedirectTo;" created="Mon, 28 Apr 2014 12:43:28 GMT" pgfnum="40575"/>
					<outline text="}" created="Mon, 10 Jun 2013 18:19:49 GMT" pgfnum="25632"/>
					</outline>
				<outline text="function twGetOauthParams (flRedirectIfParamsPresent) {" created="Tue, 16 Apr 2013 22:17:00 GMT" pgfnum="22778">
					<outline text="Changes" isComment="true" created="Thu, 24 Apr 2014 01:03:08 GMT" pgfnum="40520">
						<outline text="7/19/17; 6:40:17 PM by DW">
							<outline text="Use window.location.replace to redirecdt, per this Stack Overflow post.">
								<outline text="https://stackoverflow.com/a/506004/459452"/>
								</outline>
							</outline>
						<outline text="6/4/14; 8:08:46 AM by DW" created="Wed, 04 Jun 2014 12:08:46 GMT" pgfnum="41773">
							<outline text="Return flTwitterParamsPresent to the caller." created="Wed, 04 Jun 2014 12:08:47 GMT" pgfnum="41774"/>
							</outline>
						<outline text="6/4/14; 8:06:01 AM by DW" created="Wed, 04 Jun 2014 12:06:01 GMT" pgfnum="41771">
							<outline text="New optional param, flRedirectIfParamsPresent. If false, we don't redirect if params are present. This is needed in the stub that handles Twitter OAuth for Fargo. It just wants to quit after doing its job." created="Wed, 04 Jun 2014 12:06:02 GMT" pgfnum="41772"/>
							</outline>
						<outline text="4/23/14; 9:03:10 PM by DW" created="Thu, 24 Apr 2014 01:03:09 GMT" pgfnum="40521">
							<outline text="Get OAuth values for the user from the url params, copy into local storage. " created="Thu, 24 Apr 2014 01:03:11 GMT" pgfnum="40522"/>
							</outline>
						</outline>
					<outline text="var flTwitterParamsPresent = false;" created="Tue, 11 Jun 2013 23:25:57 GMT" pgfnum="25797"/>
					<outline text="if (flRedirectIfParamsPresent === undefined) { //6/4/14 by DW" created="Wed, 04 Jun 2014 12:05:32 GMT" pgfnum="41766">
						<outline text="flRedirectIfParamsPresent = true;" created="Wed, 04 Jun 2014 12:05:41 GMT" pgfnum="41769"/>
						<outline text="}" created="Wed, 04 Jun 2014 12:05:46 GMT" pgfnum="41770"/>
						</outline>
					<outline text="function getURLParameter (name) {">
						<outline text="return (decodeURI ((RegExp(name + '=' + '(.+?)(&amp;|$)').exec(location.search)||[,null])[1]));"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:54:02 GMT" pgfnum="40519"/>
						</outline>
					<outline text="function getParam (paramname, objname) {" created="Thu, 24 Apr 2014 01:03:43 GMT" pgfnum="40523">
						<outline text="var val = getURLParameter (paramname);" created="Thu, 24 Apr 2014 01:04:57 GMT" pgfnum="40531"/>
						<outline text="if (val != &quot;null&quot;) {" created="Thu, 24 Apr 2014 01:05:05 GMT" pgfnum="40532">
							<outline text="localStorage [objname] = val;" created="Thu, 24 Apr 2014 01:04:09 GMT" pgfnum="40529"/>
							<outline text="flTwitterParamsPresent = true;" created="Tue, 29 Apr 2014 16:14:54 GMT" pgfnum="40646"/>
							<outline text="}" created="Thu, 24 Apr 2014 01:05:12 GMT" pgfnum="40533"/>
							</outline>
						<outline text="}" created="Thu, 24 Apr 2014 01:03:55 GMT" pgfnum="40527"/>
						</outline>
					<outline text="getParam (&quot;oauth_token&quot;, &quot;twOauthToken&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;oauth_token_secret&quot;, &quot;twOauthTokenSecret&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;user_id&quot;, &quot;twUserId&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;screen_name&quot;, &quot;twScreenName&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="" created="Tue, 29 Apr 2014 16:09:03 GMT" pgfnum="40644"/>
					<outline text="//redirect if there are params on the url that invoked us -- 4/29/14 by DW" created="Tue, 29 Apr 2014 16:03:36 GMT" pgfnum="40636">
						<outline text="if (flTwitterParamsPresent &amp;&amp; flRedirectIfParamsPresent) {" created="Tue, 11 Jun 2013 23:26:25 GMT" pgfnum="25798">
							<outline text="window.location.replace (window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;))); //7/19/17 by DW"/>
							<outline text="window.location.href = window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;));" isComment="true" created="Tue, 11 Jun 2013 23:26:50 GMT" pgfnum="25800"/>
							<outline text="return;" created="Fri, 14 Jun 2013 15:22:33 GMT" pgfnum="26170"/>
							<outline text="}" created="Tue, 11 Jun 2013 23:26:43 GMT" pgfnum="25799"/>
							</outline>
						</outline>
					<outline text="" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41775"/>
					<outline text="return (flTwitterParamsPresent); //6/4/14 by DW" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41776"/>
					<outline text="}" created="Tue, 16 Apr 2013 22:17:28 GMT" pgfnum="22779"/>
					</outline>
				<outline text="function twIsTwitterConnected () {" created="Thu, 13 Jun 2013 22:55:44 GMT" pgfnum="26108">
					<outline text="Changes" isComment="true">
						<outline text="2/12/16; 10:33:06 PM by DW">
							<outline text="The access to localStorage can fail if the user has cookies turned off."/>
							</outline>
						</outline>
					<outline text="try {">
						<outline text="return (localStorage.twOauthToken != undefined);" created="Thu, 13 Jun 2013 22:56:06 GMT" pgfnum="26110"/>
						<outline text="}"/>
						</outline>
					<outline text="catch (err) {">
						<outline text="return (false);"/>
						<outline text="}"/>
						</outline>
					<outline text="}" created="Thu, 13 Jun 2013 22:56:01 GMT" pgfnum="26109"/>
					</outline>
				<outline text="function twGetUserScreenName (callback) {" created="Thu, 10 Jul 2014 00:26:36 GMT" pgfnum="42788">
					<outline text="$.ajax ({">
						<outline text="type: &quot;GET&quot;,"/>
						<outline text="url: twGetDefaultServer () + &quot;getmyscreenname&quot; + &quot;?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret),"/>
						<outline text="success: function (data) {">
							<outline text="console.log (JSON.stringify (data, undefined, 4));" created="Thu, 10 Jul 2014 00:28:12 GMT" pgfnum="42791"/>
							<outline text="callback (data);" created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481"/>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status) { ">
							<outline text="console.log (&quot;twGetUserScreenName: error == &quot; + JSON.stringify (status, undefined, 4));" created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848"/>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Thu, 10 Jul 2014 00:26:50 GMT" pgfnum="42789"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;);"/>
					<outline text="twGetOauthParams ();"/>
					<outline text="if (twIsTwitterConnected ()) {">
						<outline text="twGetUserScreenName (function (data) {">
							<outline text="console.log (jsonStringify (data));"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="test1/index.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;test app&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/nodestorage/api.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: Ubuntu;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 90px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/code/testing/tweeting/">
			<outline text="code.js">
				<outline text="function twGetDefaultServer () {">
					<outline text="var urlServer = &quot;http://localhost:1401/&quot;;" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="return (urlServer);"/>
					<outline text="}"/>
					</outline>
				<outline text="function twConnectToTwitter () {" created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25623">
					<outline text="var urlServer = twGetDefaultServer ();" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="function trimTrailing (s, ch) {" created="Mon, 11 Mar 2013 02:40:24 GMT" pgfnum="20129">
						<outline text="while (s.charAt (s.length - 1) == ch) {">
							<outline text="s = s.substr (0, s.length - 1);"/>
							<outline text="}" created="Thu, 24 Apr 2014 00:51:29 GMT" pgfnum="40514"/>
							</outline>
						<outline text="return (s);" created="Mon, 11 Mar 2013 02:43:18 GMT" pgfnum="20133"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:51:23 GMT" pgfnum="40513"/>
						</outline>
					<outline text="var s = trimTrailing (window.location.href, &quot;#&quot;);" created="Thu, 13 Jun 2013 23:16:23 GMT" pgfnum="26128"/>
					<outline text="var urlRedirectTo = urlServer + &quot;connect?redirect_url=&quot; + encodeURIComponent (s);" created="Mon, 28 Apr 2014 12:43:45 GMT" pgfnum="40579"/>
					<outline text="window.location.href = urlRedirectTo;" created="Mon, 28 Apr 2014 12:43:28 GMT" pgfnum="40575"/>
					<outline text="}" created="Mon, 10 Jun 2013 18:19:49 GMT" pgfnum="25632"/>
					</outline>
				<outline text="function twGetOauthParams (flRedirectIfParamsPresent) {" created="Tue, 16 Apr 2013 22:17:00 GMT" pgfnum="22778">
					<outline text="Changes" isComment="true" created="Thu, 24 Apr 2014 01:03:08 GMT" pgfnum="40520">
						<outline text="7/19/17; 6:40:17 PM by DW">
							<outline text="Use window.location.replace to redirecdt, per this Stack Overflow post.">
								<outline text="https://stackoverflow.com/a/506004/459452"/>
								</outline>
							</outline>
						<outline text="6/4/14; 8:08:46 AM by DW" created="Wed, 04 Jun 2014 12:08:46 GMT" pgfnum="41773">
							<outline text="Return flTwitterParamsPresent to the caller." created="Wed, 04 Jun 2014 12:08:47 GMT" pgfnum="41774"/>
							</outline>
						<outline text="6/4/14; 8:06:01 AM by DW" created="Wed, 04 Jun 2014 12:06:01 GMT" pgfnum="41771">
							<outline text="New optional param, flRedirectIfParamsPresent. If false, we don't redirect if params are present. This is needed in the stub that handles Twitter OAuth for Fargo. It just wants to quit after doing its job." created="Wed, 04 Jun 2014 12:06:02 GMT" pgfnum="41772"/>
							</outline>
						<outline text="4/23/14; 9:03:10 PM by DW" created="Thu, 24 Apr 2014 01:03:09 GMT" pgfnum="40521">
							<outline text="Get OAuth values for the user from the url params, copy into local storage. " created="Thu, 24 Apr 2014 01:03:11 GMT" pgfnum="40522"/>
							</outline>
						</outline>
					<outline text="var flTwitterParamsPresent = false;" created="Tue, 11 Jun 2013 23:25:57 GMT" pgfnum="25797"/>
					<outline text="if (flRedirectIfParamsPresent === undefined) { //6/4/14 by DW" created="Wed, 04 Jun 2014 12:05:32 GMT" pgfnum="41766">
						<outline text="flRedirectIfParamsPresent = true;" created="Wed, 04 Jun 2014 12:05:41 GMT" pgfnum="41769"/>
						<outline text="}" created="Wed, 04 Jun 2014 12:05:46 GMT" pgfnum="41770"/>
						</outline>
					<outline text="function getURLParameter (name) {">
						<outline text="return (decodeURI ((RegExp(name + '=' + '(.+?)(&amp;|$)').exec(location.search)||[,null])[1]));"/>
						<outline text="}" created="Thu, 24 Apr 2014 00:54:02 GMT" pgfnum="40519"/>
						</outline>
					<outline text="function getParam (paramname, objname) {" created="Thu, 24 Apr 2014 01:03:43 GMT" pgfnum="40523">
						<outline text="var val = getURLParameter (paramname);" created="Thu, 24 Apr 2014 01:04:57 GMT" pgfnum="40531"/>
						<outline text="if (val != &quot;null&quot;) {" created="Thu, 24 Apr 2014 01:05:05 GMT" pgfnum="40532">
							<outline text="localStorage [objname] = val;" created="Thu, 24 Apr 2014 01:04:09 GMT" pgfnum="40529"/>
							<outline text="flTwitterParamsPresent = true;" created="Tue, 29 Apr 2014 16:14:54 GMT" pgfnum="40646"/>
							<outline text="}" created="Thu, 24 Apr 2014 01:05:12 GMT" pgfnum="40533"/>
							</outline>
						<outline text="}" created="Thu, 24 Apr 2014 01:03:55 GMT" pgfnum="40527"/>
						</outline>
					<outline text="getParam (&quot;oauth_token&quot;, &quot;twOauthToken&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;oauth_token_secret&quot;, &quot;twOauthTokenSecret&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;user_id&quot;, &quot;twUserId&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="getParam (&quot;screen_name&quot;, &quot;twScreenName&quot;);" created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524"/>
					<outline text="" created="Tue, 29 Apr 2014 16:09:03 GMT" pgfnum="40644"/>
					<outline text="//redirect if there are params on the url that invoked us -- 4/29/14 by DW" created="Tue, 29 Apr 2014 16:03:36 GMT" pgfnum="40636">
						<outline text="if (flTwitterParamsPresent &amp;&amp; flRedirectIfParamsPresent) {" created="Tue, 11 Jun 2013 23:26:25 GMT" pgfnum="25798">
							<outline text="window.location.replace (window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;))); //7/19/17 by DW"/>
							<outline text="window.location.href = window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;));" isComment="true" created="Tue, 11 Jun 2013 23:26:50 GMT" pgfnum="25800"/>
							<outline text="return;" created="Fri, 14 Jun 2013 15:22:33 GMT" pgfnum="26170"/>
							<outline text="}" created="Tue, 11 Jun 2013 23:26:43 GMT" pgfnum="25799"/>
							</outline>
						</outline>
					<outline text="" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41775"/>
					<outline text="return (flTwitterParamsPresent); //6/4/14 by DW" created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41776"/>
					<outline text="}" created="Tue, 16 Apr 2013 22:17:28 GMT" pgfnum="22779"/>
					</outline>
				<outline text="function twIsTwitterConnected () {" created="Thu, 13 Jun 2013 22:55:44 GMT" pgfnum="26108">
					<outline text="Changes" isComment="true">
						<outline text="2/12/16; 10:33:06 PM by DW">
							<outline text="The access to localStorage can fail if the user has cookies turned off."/>
							</outline>
						</outline>
					<outline text="try {">
						<outline text="return (localStorage.twOauthToken != undefined);" created="Thu, 13 Jun 2013 22:56:06 GMT" pgfnum="26110"/>
						<outline text="}"/>
						</outline>
					<outline text="catch (err) {">
						<outline text="return (false);"/>
						<outline text="}"/>
						</outline>
					<outline text="}" created="Thu, 13 Jun 2013 22:56:01 GMT" pgfnum="26109"/>
					</outline>
				<outline text="function twGetUserScreenName (callback) {" created="Thu, 10 Jul 2014 00:26:36 GMT" pgfnum="42788">
					<outline text="$.ajax ({">
						<outline text="type: &quot;GET&quot;,"/>
						<outline text="url: twGetDefaultServer () + &quot;getmyscreenname&quot; + &quot;?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret),"/>
						<outline text="success: function (data) {">
							<outline text="console.log (JSON.stringify (data, undefined, 4));" created="Thu, 10 Jul 2014 00:28:12 GMT" pgfnum="42791"/>
							<outline text="callback (data);" created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481"/>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status) { ">
							<outline text="console.log (&quot;twGetUserScreenName: error == &quot; + JSON.stringify (status, undefined, 4));" created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848"/>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Thu, 10 Jul 2014 00:26:50 GMT" pgfnum="42789"/>
					</outline>
				<outline text="function twTweet (status, inReplyToId, callback) {" created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25622">
					<outline text="Changes" isComment="true" created="Thu, 05 Jun 2014 13:55:32 GMT" pgfnum="41784">
						<outline text="8/2/16; 3:38:54 PM by DW">
							<outline text="The error message format seems to have changed (again?) -- changed the code accordingly."/>
							</outline>
						<outline text="12/16/14; 2:50:13 PM by DW">
							<outline text="It looks like the format of the struct returned by Twitter on error has changed. Now instead of an array, they return a struct? Not sure. But this effects how we call the callback on error, and the way we did it might break some? I looked at Radio3 and LCE, and they don't call this routine directly. (We don't call the callback on errors now, and we put up an alert dialog.)"/>
							</outline>
						<outline text="9/2/14; 4:19:50 PM by DW" created="Tue, 02 Sep 2014 20:19:49 GMT" pgfnum="43234">
							<outline text="Add an error branch." created="Tue, 02 Sep 2014 20:19:50 GMT" pgfnum="43235"/>
							</outline>
						<outline text="6/5/14; 9:55:40 AM by DW" created="Thu, 05 Jun 2014 13:55:38 GMT" pgfnum="41785">
							<outline text="oauthToken, oauthTokenSecret and callback become optional params. " created="Thu, 05 Jun 2014 13:55:41 GMT" pgfnum="41786"/>
							</outline>
						</outline>
					<outline text="var urlServer = twGetDefaultServer ();"/>
					<outline text="function encode (s) {" created="Wed, 23 Apr 2014 17:16:42 GMT" pgfnum="40479">
						<outline text="return (encodeURIComponent (s));" created="Fri, 21 Jun 2013 15:07:18 GMT" pgfnum="26894"/>
						<outline text="}" created="Wed, 23 Apr 2014 17:16:46 GMT" pgfnum="40480"/>
						</outline>
					<outline text="if (inReplyToId == undefined) {" created="Wed, 23 Apr 2014 17:13:23 GMT" pgfnum="40473">
						<outline text="inReplyToId = 0;" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
						<outline text="}" created="Wed, 23 Apr 2014 17:13:31 GMT" pgfnum="40476"/>
						</outline>
					<outline text="" created="Sat, 07 Jun 2014 11:47:43 GMT" pgfnum="41789"/>
					<outline text="var apiUrl = urlServer + &quot;tweet?oauth_token=&quot; + encode (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encode (localStorage.twOauthTokenSecret) + &quot;&amp;status=&quot; + encode (status) + &quot;&amp;in_reply_to_status_id=&quot; + encode (inReplyToId);" created="Sat, 07 Jun 2014 11:47:43 GMT" pgfnum="41790"/>
					<outline text="console.log (&quot;twTweet: &quot; + apiUrl);" created="Sat, 07 Jun 2014 11:47:51 GMT" pgfnum="41794"/>
					<outline text="" created="Sat, 07 Jun 2014 11:47:44 GMT" pgfnum="41793"/>
					<outline text="$.ajax ({">
						<outline text="type: &quot;GET&quot;,"/>
						<outline text="url: apiUrl,"/>
						<outline text="success: function (data){">
							<outline text="console.log (&quot;twTweet: twitter response == &quot; + JSON.stringify (data, undefined, 4)); //9/3/14 by DW" created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939"/>
							<outline text="if (callback != undefined) { //6/5/14 by DW" created="Thu, 05 Jun 2014 13:55:13 GMT" pgfnum="41782">
								<outline text="callback (data);" created="Thu, 24 Apr 2014 12:47:03 GMT" pgfnum="40460"/>
								<outline text="}" created="Thu, 05 Jun 2014 13:55:20 GMT" pgfnum="41783"/>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="error: function (status) { ">
							<outline text="var twitterResponse = JSON.parse (status.responseText);" created="Tue, 02 Sep 2014 20:21:32 GMT" pgfnum="43236"/>
							<outline text="var innerResponse = JSON.parse (twitterResponse.data);" created="Tue, 02 Sep 2014 20:32:21 GMT" pgfnum="43237"/>
							<outline text="var theError = innerResponse.errors [0].message; //8/2/16 by DW"/>
							<outline text="console.log (&quot;twTweet: error reported by twitter == &quot; + theError);"/>
							<outline text="alert (&quot;Twitter reported an error: \&quot;&quot; + theError + &quot;\&quot;&quot;);"/>
							<outline text=""/>
							<outline text="old code -- pre-December 2014" isComment="true">
								<outline text="console.log (&quot;twTweet: error, twitter response == &quot; + JSON.stringify (innerResponse.errors [0], undefined, 4));" isComment="true" created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939"/>
								<outline text="if (callback != undefined) { //9/2/14 by DW" isComment="true" created="Thu, 05 Jun 2014 13:55:13 GMT" pgfnum="41782">
									<outline text="innerResponse.errors [0].flError = true; //signal to callback that it was an error" created="Tue, 02 Sep 2014 20:35:18 GMT" pgfnum="43238"/>
									<outline text="callback (innerResponse.errors [0]);" created="Thu, 24 Apr 2014 12:47:03 GMT" pgfnum="40460"/>
									<outline text="}" created="Thu, 05 Jun 2014 13:55:20 GMT" pgfnum="41783"/>
									</outline>
								</outline>
							<outline text="},"/>
							</outline>
						<outline text="dataType: &quot;json&quot;"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 10 Jun 2013 18:07:45 GMT" pgfnum="25627"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;); "/>
					<outline text="twGetOauthParams ();"/>
					<outline text="if (twIsTwitterConnected ()) {">
						<outline text="twGetUserScreenName (function (data) {">
							<outline text="console.log (jsonStringify (data));"/>
							<outline text="});"/>
							</outline>
						<outline text="twTweet (&quot;This is a test. Please ignore...&quot;, 0, function (data) {">
							<outline text="console.log (jsonStringify (data));"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="index.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;test app&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: Ubuntu;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 90px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script">
			<outline text="nodeEditorSuite.utilities.buildTwitterPackage ()"/>
			</outline>
		</body>
	</opml>
